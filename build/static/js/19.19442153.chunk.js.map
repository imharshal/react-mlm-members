{"version":3,"sources":["redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/plans.js","router/routes/profile.js","router/routes/withdraw.js","router/routes/income-reports.js","router/routes/sidebar.js","router/routes/myteam.js","router/routes/bank-details.js","router/routes/funds.js","router/routes/all-services.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","@core/auth/jwt/useJwt.js","utility/Utils.js","@core/components/avatar/index.js","utility/hooks/useSkin.js","utility/context/Can.js","redux/actions/auth/index.js"],"names":["handleContentWidth","value","dispatch","type","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","props","layout","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Tag","Fragment","useEffect","menuCollapsed","menuHidden","className","classnames","query","length","PlansRoutes","path","component","lazy","ProfileRoutes","meta","navLink","WithdrawRoutes","IncomeReportRoutes","SidebarRoutes","MyteamRoutes","BankDetailsRoute","AddFundsRoutes","AllServicesRoutes","Routes","authRoute","BlankLayout","useSkin","useState","isMounted","setIsMounted","Customizer","skin","setSkin","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","e","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","size","FormGroup","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","id","onChange","renderSkinsRadio","theme","selectThemeColors","classNamePrefix","defaultValue","options","isClearable","color","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","Footer","Date","getFullYear","target","rel","UserDropdown","userData","setUserData","isUserLoggedIn","JSON","parse","localStorage","getItem","avatar","defaultAvatar","UncontrolledDropdown","tag","DropdownToggle","username","src","alt","height","width","initials","content","contentStyles","borderRadius","fontSize","style","renderUserImg","DropdownMenu","right","DropdownItem","Link","to","handleLogout","NavbarUser","setMenuVisibility","ThemeToggler","NavItem","NavLink","ThemeNavbar","title","icon","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","themeConfig","app","appLogoImage","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","obj","match","res","recurse","current","key","undefined","push","VerticalNavMenuLink","item","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","exact","strict","arr","parents","searchParents","disabled","active","newTab","isActive","url","resetActiveGroup","badge","badgeText","Badge","pill","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","filter","val","onCollapseClick","pop","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","ref","wheelPropagation","onScrollY","container","scrollTop","classList","contains","add","remove","scrollMenu","useRTL","isRTL","element","document","getElementsByTagName","setAttribute","valueToStore","Function","handleRTL","error","console","log","useNavbarType","useFooterType","footer","useNavbarColor","backgroundColor","VerticalLayout","menuVisibility","window","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","addEventListener","footerClasses","static","sticky","hidden","bgColorCondition","floating","Navbar","expand","light","dark","show","customizer","showUnder","bottom","Button","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","data","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","maxHeight","overflowY","ddRef","left","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","navbarClasses","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","useContext","AbilityContext","Layouts","NotAuthorized","Error","FinalRoute","route","action","resource","publicRoute","basename","process","render","Object","keys","LayoutTag","LayoutRoutes","LayoutPaths","LayoutRoutesAndPaths","assign","fallback","App","BaseUrl","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","axios","defaults","headers","post","JwtService","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","interceptors","request","use","config","accessToken","getToken","Authorization","Promise","reject","response","originalRequest","status","refreshToken","then","r","setToken","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","callback","setItem","args","getRefreshToken","jwt","isObjEmpty","kFormatter","num","toFixed","colors","primary25","primary","neutral10","neutral20","neutral30","Avatar","forwardRef","imgClassName","badgeUp","badgeColor","img","imgHeight","imgWidth","rest","str","results","split","forEach","join","getInitials","defaultProps","body","bordered","stringify","createContext","createContextualCan","client","useJwt","handleLogin","removeItem"],"mappings":"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","file":"static/js/19.19442153.chunk.js","sourcesContent":["// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\r\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n  const navbarStore = store.navbar\n  const contentWidth = store.layout.contentWidth\n\n  //** Vars\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [wrapperClass]: wrapperClass,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': !appLayout,\n          'content-area-wrapper': appLayout,\n          'container p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag\n          /*eslint-disable */\n          {...(layout === 'HorizontalLayout' && !appLayout\n            ? { className: classnames({ 'content-body': !appLayout }) }\n            : {})}\n          /*eslint-enable */\n        >\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default LayoutWrapper\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst PlansRoutes = [\r\n    //authentication routes\r\n    {\r\n        path: '/plans',\r\n        component: lazy(() => import('../../views/plans/Plans'))\r\n    },\r\n    {\r\n        path: '/plans/active',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n\r\n        // component: lazy(() => import('../../views/plans/ActivePlans'))\r\n    }\r\n]\r\n\r\nexport { PlansRoutes }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst ProfileRoutes = [\r\n    //authentication routes\r\n\r\n    {\r\n        path: '/profile',\r\n        component: lazy(() => import('../../views/profile')),\r\n        meta: {\r\n        navLink: '/profile'\r\n        }\r\n    }\r\n\r\n]\r\n\r\nexport { ProfileRoutes }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst WithdrawRoutes = [\r\n    //authentication routes\r\n    // {\r\n    //     path: '/withdraw-funds',\r\n    //     component: lazy(() => import('../../views/withdraw/WithdrawalHistory'))\r\n    // },\r\n    {\r\n        path: '/withdraw-funds',\r\n        component: lazy(() => import('../../views/withdraw/WithdrawFunds'))\r\n\r\n        // component: lazy(() => import('../../views/withdraw/WithdrawalHistory'))\r\n    },\r\n    {\r\n        path: '/withdrawal-history',\r\n        // component: lazy(() => import('../../views/DefaultPage'))\r\n\r\n        component: lazy(() => import('../../views/withdraw/WithdrawalHistory'))\r\n    }\r\n]\r\n\r\nexport { WithdrawRoutes }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst IncomeReportRoutes = [\r\n    //authentication routes\r\n    {\r\n        path: '/level-income',\r\n        // component: lazy(() => import('../../views/DefaultPage'))\r\n        component: lazy(() => import('../../views/income-reports/LevelIncomeHistory'))\r\n    },\r\n    {\r\n        path: '/direct-income',\r\n        // component: lazy(() => import('../../views/DefaultPage'))\r\n        component: lazy(() => import('../../views/income-reports/DirectIncomeHistory'))\r\n    },\r\n    {\r\n        path: '/daily-income',\r\n        // component: lazy(() => import('../../views/DefaultPage'))\r\n        component: lazy(() => import('../../views/income-reports/DailyIncomeHistory'))\r\n    },\r\n    {\r\n        path: '/reward-income',\r\n        // component: lazy(() => import('../../views/DefaultPage'))\r\n        component: lazy(() => import('../../views/income-reports/RewardIncomeHistory'))\r\n    }\r\n\r\n\r\n    // {\r\n    //     path: '/plans/active',\r\n    //     component: lazy(() => import('../../views/plans/ActivePlans'))\r\n    // }\r\n]\r\n\r\nexport { IncomeReportRoutes}\r\n","import { lazy } from 'react'\r\n\r\n// ** Merge Routes\r\nconst SidebarRoutes = [\r\n  //-------------------------\r\n  //App routes\r\n  {\r\n    path: '/home',\r\n    component: lazy(() => import('../../views/dashboard'))\r\n  },\r\n  // {\r\n  //   path: '/myprofile',\r\n  //   component: lazy(() => import('../../views/profile'))\r\n  // },\r\n  // {\r\n  //   path: 'myprofile/:id',\r\n  //   component: lazy(() => import('../../views/profile'))\r\n\r\n  // },\r\n  // {\r\n  //   path: '/myteam',\r\n  //   component: lazy(() => import('../../views/pages/Genealogy'))\r\n  // },\r\n  // {\r\n  //   path: '/add-funds',\r\n  //   component: lazy(() => import('../../views/DefaultPage'))\r\n  // },\r\n  // {\r\n  //   path: '/withdraw-funds',\r\n  //   component: lazy(() => import('../../views/DefaultPage'))\r\n  // },\r\n  {\r\n    path: '/change-password',\r\n    component: lazy(() => import('../../views/pages/ChangePassword'))\r\n  },\r\n  {\r\n    path: '/logout',\r\n    component: lazy(() => import('../../views/pages/Logout')),\r\n    layout: 'BlankLayout'\r\n  }\r\n]\r\n\r\nexport { SidebarRoutes }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst MyteamRoutes = [\r\n    //authentication routes\r\n    {\r\n        path: '/team/details',\r\n        // component: lazy(() => import('../../views/DefaultPage'))\r\n\r\n        component: lazy(() => import('../../views/team/Details'))\r\n    },\r\n    {\r\n        path: '/team/matrix',\r\n        component: lazy(() => import('../../views/team/Matrix'))\r\n    }\r\n]\r\n\r\nexport { MyteamRoutes }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst BankDetailsRoute = [\r\n    //authentication routes\r\n    {\r\n        path: '/bank-details',\r\n        component: lazy(() => import('../../views/pages/BankDetails'))\r\n\r\n        // component: lazy(() => import('../../views/team/Details'))\r\n    }\r\n]\r\n\r\nexport { BankDetailsRoute }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst AddFundsRoutes = [\r\n    //authentication routes\r\n    // {\r\n    //     path: '/withdraw-funds',\r\n    //     component: lazy(() => import('../../views/withdraw/WithdrawalHistory'))\r\n    // },\r\n    {\r\n        path: '/fund-transfer',\r\n        component: lazy(() => import('../../views/funds/TransferFund'))\r\n    },\r\n    {\r\n        path: '/funds',\r\n        component: lazy(() => import('../../views/funds/AllFunds'))\r\n    },\r\n    {\r\n        path: '/add-funds',\r\n        component: lazy(() => import('../../views/funds/AddFunds'))\r\n        // component: lazy(() => import('../../views/DefaultPage'))\r\n\r\n        // component: lazy(() => import('../../views/withdraw/WithdrawalHistory'))\r\n    },\r\n    {\r\n        path: '/funds-history',\r\n        component: lazy(() => import('../../views/funds/FundHistory'))\r\n\r\n        // component: lazy(() => import('../../views/withdraw/WithdrawalHistory'))\r\n    }\r\n]\r\n\r\nexport { AddFundsRoutes }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst AllServicesRoutes = [\r\n    //authentication routes\r\n    {\r\n        path: '/mobile-recharge',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n    },\r\n    {\r\n        path: '/dth-recharge',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n    },\r\n    {\r\n        path: '/bill-pay',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n    },\r\n    {\r\n        path: '/insurance',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n    },\r\n    {\r\n        path: '/new-pancard',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n    }\r\n    \r\n\r\n]\r\n\r\nexport { AllServicesRoutes }\r\n","import { lazy } from 'react'\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Cashmind'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/home'\r\n\r\nimport { PlansRoutes } from \"./plans\"\r\nimport { ProfileRoutes } from \"./profile\"\r\nimport { WithdrawRoutes } from \"./withdraw\"\r\nimport { IncomeReportRoutes } from \"./income-reports\"\r\nimport { SidebarRoutes } from './sidebar'\r\nimport { MyteamRoutes } from './myteam'\r\nimport { BankDetailsRoute } from './bank-details'\r\nimport { AddFundsRoutes } from './funds'\r\nimport { AllServicesRoutes } from './all-services'\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  //authentication routes\r\n  {\r\n    path: '/login',\r\n    component: lazy(() => import('../../views/pages/Login')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/forgot-password/:token',\r\n    component: lazy(() => import('../../views/pages/ResetPassword')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/signup',\r\n    component: lazy(() => import('../../views/signup')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  \r\n  {\r\n    path: '/ref/:username',\r\n    component: lazy(() => import('../../views/signup')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/error',\r\n    component: lazy(() => import('../../views/misc/Error')),\r\n    layout: 'BlankLayout'\r\n  },\r\n  ...SidebarRoutes,\r\n  ...PlansRoutes,\r\n  ...ProfileRoutes,\r\n  ...MyteamRoutes,\r\n  ...WithdrawRoutes,\r\n  ...IncomeReportRoutes,\r\n  ...BankDetailsRoute,\r\n  ...AddFundsRoutes,\r\n  ...AllServicesRoutes\r\n]\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes }\r\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\nconst BlankLayout = ({ children, ...rest }) => {\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div className='blank-page'>\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { Settings, X } from 'react-feather'\nimport { CustomInput, FormGroup } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    setSkin,\n    isRtl,\n    setIsRtl,\n    layout,\n    setLayout,\n    navbarType,\n    setNavbarType,\n    footerType,\n    setFooterType,\n    navbarColor,\n    setNavbarColor,\n    isHidden,\n    setIsHidden,\n    contentWidth,\n    setContentWidth,\n    menuCollapsed,\n    setMenuCollapsed,\n    transition,\n    setTransition\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setSkin(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setNavbarType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={`footer-${radio.name}`}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setFooterType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content'>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Content Width</p>\n            <div className='d-flex'>\n              <CustomInput\n                type='radio'\n                id='full-width'\n                className='mr-1'\n                label='Full Width'\n                checked={contentWidth === 'full'}\n                onChange={() => setContentWidth('full')}\n              />\n              <CustomInput\n                type='radio'\n                id='boxes'\n                label='Boxed'\n                checked={contentWidth === 'boxed'}\n                onChange={() => setContentWidth('boxed')}\n              />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex'>\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='font-weight-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='font-weight-bold'>Menu Layout</p>\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <CustomInput\n                type='radio'\n                id='vertical-layout'\n                label='Vertical'\n                checked={layout === 'VerticalLayout'}\n                onChange={() => setLayout('vertical')}\n                className='mr-1'\n              />\n              <CustomInput\n                type='radio'\n                id='horizontal-layout'\n                label='Horizontal'\n                checked={layout === 'HorizontalLayout'}\n                onChange={() => setLayout('horizontal')}\n              />\n            </div>\n          </FormGroup>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <div className='d-flex align-items-center'>\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\n                <CustomInput\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\n              <CustomInput\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <p className='font-weight-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </FormGroup>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-left d-block d-md-inline-block mt-25'>\n        COPYRIGHT © {new Date().getFullYear()}{' '}\n        <a href='https://cashmind.in' target='_blank' rel='noopener noreferrer'>\n          Cashmind\n        </a>\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\n      </span>\n      {/* <span className='float-md-right d-none d-md-block'>\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span> */}\n    </p>\n  )\n}\n\nexport default Footer\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogout } from '@store/actions/auth'\n\n// ** Third Party Components\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\nimport { toNumber } from 'reactstrap/lib/utils'\n\nconst UserDropdown = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** State\n  const [userData, setUserData] = useState(null)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  //** Vars\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\n\n  const renderUserImg = () => {\n    if (userData !== null && userData.avatar && userData.avatar.length > 10) {\n      return <img src={userData.avatar} alt='user-avatar' className='img-fluid rounded' height='40' width='40' />\n    } else {\n      const stateNum = (userData && userData.avatar),\n        states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n        color = states[stateNum]\n      return (\n        <Avatar\n          initials\n          color={color}\n          className='rounded'\n          content={userData ? userData['fullname'] : 'A B'}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(20px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '40px',\n            width: '40px'\n          }}\n        />\n      )\n    }\n  }\n\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name font-weight-bold'>{(userData && userData['fullname'])}</span>\n          <span className='user-status'>@{(userData && userData.username)}</span>\n        </div>\n        {renderUserImg()}\n        {/* <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' /> */}\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownItem tag={Link} to='/profile' >\n          <User size={14} className='mr-75' />\n          <span className='align-middle'>Profile</span>\n        </DropdownItem>\n        {/* <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <Mail size={14} className='mr-75' />\n          <span className='align-middle'>Inbox</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <CheckSquare size={14} className='mr-75' />\n          <span className='align-middle'>Tasks</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <MessageSquare size={14} className='mr-75' />\n          <span className='align-middle'>Chats</span>\n        </DropdownItem> */}\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\n          <Power size={14} className='mr-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport { Fragment } from 'react'\n\nimport UserDropdown from './UserDropdown'\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from 'react-feather'\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none d-flex align-items-center'>\n        <NavItem className='mobile-menu mr-auto'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavItem className='d-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n\n      <ul className='nav navbar-nav align-items-center ml-auto'>\n        <UserDropdown />\n      </ul>\n    </Fragment>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <NavbarUser skin={skin} setSkin={setSkin} setMenuVisibility={setMenuVisibility} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","import { Mail, Home, Settings, LogOut, Edit3, Send, DownloadCloud, DollarSign, Users, Slack, User, Eye, Activity, PlayCircle, Layers, Monitor, Trello, DivideSquare, BookOpen, FilePlus, Download, Upload } from 'react-feather'\r\nimport { Treemap } from 'recharts'\r\n\r\n\r\nexport default [\r\n  {\r\n    id: 'dashboard',\r\n    title: 'Dashboard',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'profile',\r\n    title: 'My Profile',\r\n    icon: <User size={20} />,\r\n    navLink: '/profile'\r\n  },\r\n\r\n  {\r\n    id: 'myteam',\r\n    title: 'My Team',\r\n    icon: <Users size={20} />,\r\n    children: [\r\n      {\r\n        id: 'my-team-list',\r\n        title: 'Team Details',\r\n        icon: <BookOpen size={20} />,\r\n        navLink: '/team/details'\r\n      },\r\n      {\r\n        id: 'my-team-matrix',\r\n        title: 'Team Matrix',\r\n        icon: <DivideSquare size={20} />,\r\n        navLink: '/team/matrix'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 'plans',\r\n    title: 'Active Plans',\r\n    icon: <Layers size={20} />,\r\n    navLink: '/plans'\r\n\r\n    // children:[\r\n    //   {\r\n    //     id: 'all-plan',\r\n    //     title: 'Explore Plans',\r\n    //     icon: <Eye size={20} />,\r\n    //     navLink: '/plans'\r\n    //   },\r\n    //   {\r\n    //     id: 'active-plan',\r\n    //     title: 'Active Plan',\r\n    //     icon: <Activity size={20} />,\r\n    //     navLink: '/plans/active'\r\n    //   }\r\n    // ]\r\n\r\n  },\r\n  {\r\n    id: 'bank-details',\r\n    title: 'Bank Details',\r\n    icon: <FilePlus size={20} />,\r\n    navLink: '/bank-details'\r\n  },\r\n  {\r\n    id: 'availFunds',\r\n    title: 'Available funds',\r\n    icon: <DollarSign size={20} />,\r\n    navLink: '/funds'\r\n  },\r\n  \r\n  {\r\n    id: 'addFunds',\r\n    title: 'Add Funds',\r\n    icon: <Download size={20} />,\r\n    navLink: '/add-funds'\r\n  },\r\n  {\r\n    id: 'transfer-fund',\r\n    title: 'Fund Transfer',\r\n    icon: <Send size={20} />,\r\n    navLink: '/fund-transfer'\r\n  },\r\n  {\r\n    id: 'fundHistory',\r\n    title: 'Fund Wallet History',\r\n    icon: <BookOpen size={20} />,\r\n    navLink: '/funds-history'\r\n  },\r\n  {\r\n    id: 'withdraw',\r\n    title: 'Withdraw',\r\n    icon: <Upload size={20} />,\r\n    children: [\r\n      {\r\n        id: 'withdrawFunds',\r\n        title: 'IMPS Withdraw',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/withdraw-funds'\r\n      },\r\n      {\r\n        id: 'withdrawHistory',\r\n        title: 'Withdrawal History',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/withdrawal-history'\r\n      }\r\n    ]\r\n\r\n  },\r\n  {\r\n    id: 'income-reports',\r\n    title: 'Income Reports',\r\n    icon: <Trello size={20} />,\r\n    children: [\r\n      {\r\n        id: 'daily-income',\r\n        title: 'Daily Income',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/daily-income'\r\n      },\r\n      {\r\n        id: 'level-income',\r\n        title: 'Level Income',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/level-income'\r\n      },\r\n      {\r\n        id: 'direct-income',\r\n        title: 'Direct Income',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/direct-income'\r\n      },\r\n      {\r\n        id: 'reward-income',\r\n        title: 'Reward Income',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/reward-income'\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    id: 'all-services',\r\n    title: 'All Services',\r\n    icon: <Monitor size={20} />,\r\n    children: [\r\n      {\r\n        id: 'mobile-recharge',\r\n        title: 'Mobile Recharge',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/mobile-recharge'\r\n      },\r\n      {\r\n        id: 'dth-recharge',\r\n        title: 'DTH Recharge',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/dth-recharge'\r\n      },\r\n      {\r\n        id: 'bill-pay',\r\n        title: 'Bill Pay',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/bill-pay'\r\n      },\r\n      {\r\n        id: 'insurance',\r\n        title: 'Insurance 2W/4W',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/insurance'\r\n      },\r\n      {\r\n        id: 'pancard',\r\n        title: 'New Pancard',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/new-pancard'\r\n      }\r\n    ]\r\n  },\r\n\r\n  {\r\n    id: 'change-password',\r\n    title: 'Change Password',\r\n    icon: <Edit3 size={20} />,\r\n    navLink: '/change-password'\r\n  },\r\n\r\n  {\r\n    id: 'logout',\r\n    title: 'Logout',\r\n    icon: <LogOut size={20} />,\r\n    navLink: '/logout'\r\n  }\r\n\r\n]\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item mr-auto'>\n          <NavLink to='/' className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\n// ** Vertical Menu Array Of Items\nimport navigation from '@src/navigation/vertical'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuLink = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  toggleActiveGroup,\n  parentItem,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  // ** To match path\n  const match = matchPath(currentURL, {\n    path: `${item.navLink}/:param`,\n    exact: true,\n    strict: false\n  })\n\n  // ** Search for current item parents\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    return allParents\n  }\n\n  // ** URL Vars\n  const resetActiveGroup = navLink => {\n    const parents = search(navigation, navLink, match)\n    toggleActiveGroup(item.id, parents)\n  }\n\n  // ** Reset Active & Open Group Arrays\n  const resetActiveAndOpenGroups = () => {\n    setGroupActive([])\n    setGroupOpen([])\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n        onClick={e => {\n          if (!item.navLink.length) {\n            e.preventDefault()\n          }\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  parentItem,\n  menuCollapsed,\n  menuHover,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggles Open Group\n  const toggleOpenGroup = (item, parentItem) => {\n    let openArr = groupOpen\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      allParents.pop()\n    }\n\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\n    } else {\n      openArr = []\n      if (!groupOpen.includes(item)) {\n        openArr.push(item)\n      }\n    }\n\n    // ** Set Open Group\n    setGroupOpen([...openArr])\n  }\n\n  // ** Toggle Active Group\n  const toggleActiveGroup = (item, parentItem) => {\n    let activeArr = groupActive\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      activeArr = allParents\n    } else {\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\n    }\n\n    // ** Set open group removing any activegroup item present in opengroup state\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\n    setGroupOpen([...openArr])\n\n    // **  Set Active Group\n    setGroupActive([...activeArr])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\n      toggleActiveGroup(item.id)\n    } else {\n      toggleOpenGroup(item.id, parentItem)\n    }\n\n    e.preventDefault()\n  }\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            toggleActiveGroup={toggleActiveGroup}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            routerProps={routerProps}\n            currentActiveItem={currentActiveItem}\n            activeItem={activeItem}\n            setActiveItem={setActiveItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuSectionHeader,\n    VerticalNavMenuGroup,\n    VerticalNavMenuLink\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Vertical Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    if (menuCollapsed) {\n      setMenuHover(true)\n    }\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu(props)\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={navigation}\n                  groupActive={groupActive}\n                  setGroupActive={setGroupActive}\n                  activeItem={activeItem}\n                  setActiveItem={setActiveItem}\n                  groupOpen={groupOpen}\n                  setGroupOpen={setGroupOpen}\n                  routerProps={routerProps}\n                  menuCollapsed={menuCollapsed}\n                  menuHover={menuHover}\n                  currentActiveItem={currentActiveItem}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  const isHidden = layoutStore.menuHidden\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n          routerProps={routerProps}\n          currentActiveItem={currentActiveItem}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? (\n            navbar({ setMenuVisibility, skin, setSkin })\n          ) : (\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          menuCollapsed={menuCollapsed}\n          setMenuCollapsed={setMenuCollapsed}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst VerticalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default VerticalLayout\n","import { Mail, Home } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Second Page',\r\n    icon: <Mail size={20} />,\r\n    navLink: '/second-page'\r\n  }\r\n]\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\n\n// ** Horizontal menu items array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst HorizontalNavMenuLink = ({\n  item,\n  setOpenDropdown,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  routerProps,\n  currentActiveItem,\n  isChild\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\n\n  // ** Get parents of current items\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    allParents.pop()\n    return allParents\n  }\n\n  // ** Remove all items from OpenDropdown array\n  const resetOpenDropdowns = () => setOpenDropdown([])\n\n  // ** On mount update active group array\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames('nav-item', {\n        active: item.navLink === activeItem,\n        disabled: item.disabled\n      })}\n      onClick={resetOpenDropdowns}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        tag={LinkTag}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\n\n// ** Utils\nimport { isNavGroupActive } from '@layouts/utils'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const {\n    item,\n    submenu,\n    groupActive,\n    onMouseEnter,\n    onMouseLeave,\n    openDropdown,\n    setGroupActive,\n    activeItem,\n    setActiveItem,\n    routerProps,\n    setOpenDropdown,\n    currentActiveItem\n  } = props\n\n  // ** URL Var\n  const currentURL = useLocation().pathname\n\n  // ** Dropdown menu modifiers\n  const menuModifiers = {\n    setMaxHeight: {\n      enabled: true,\n      fn: data => {\n        const pageHeight = window.innerHeight,\n          ddTop = data.instance.reference.getBoundingClientRect().top,\n          ddHeight = data.popper.height\n        let maxHeight, stylesObj\n\n        // ** Calculate and set height\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\n          maxHeight = pageHeight - ddTop - 25\n          stylesObj = {\n            maxHeight,\n            overflowY: 'auto'\n          }\n        }\n\n        const ddRef = data.instance.popper.getBoundingClientRect()\n\n        // ** If there is not space left to open sub menu open it to the right\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\n        }\n\n        return {\n          ...data,\n          styles: {\n            ...stylesObj\n          }\n        }\n      }\n    }\n  }\n  return (\n    <Dropdown\n      tag='li'\n      className={classnames({\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active':\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\n      })}\n      isOpen={openDropdown.includes(item.id)}\n      toggle={() => onMouseEnter(item.id)}\n      onMouseEnter={() => onMouseEnter(item.id)}\n      onMouseLeave={() => onMouseLeave(item.id)}\n    >\n      <DropdownToggle\n        to='/'\n        tag={Link}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n        onClick={e => e.preventDefault()}\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </DropdownToggle>\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\n        <HorizontalNavMenuItems\n          submenu={true}\n          parentItem={item}\n          items={item.children}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          openDropdown={openDropdown}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          isChild={true}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Horizontal Menu Array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\n  // ** States\n  const [activeItem, setActiveItem] = useState(null)\n  const [groupActive, setGroupActive] = useState([])\n  const [openDropdown, setOpenDropdown] = useState([])\n\n  // ** On mouse enter push the ID to openDropdown array\n  const onMouseEnter = id => {\n    const arr = openDropdown\n    arr.push(id)\n    setOpenDropdown([...arr])\n  }\n\n  // ** On mouse leave remove the ID to openDropdown array\n  const onMouseLeave = id => {\n    const arr = openDropdown\n    arr.splice(arr.indexOf(id), 1)\n    setOpenDropdown([...arr])\n  }\n\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems\n          submenu={false}\n          items={navigation}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          openDropdown={openDropdown}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? (\n              menu({ routerProps, currentActiveItem })\n            ) : (\n              <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />\n            )}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst HorizontalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default HorizontalLayout\n","// ** React Imports\r\nimport { Suspense, useContext, lazy, useEffect } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/misc/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/misc/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/home' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n    // else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n    //   // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n    //   return <Redirect to='/misc/not-authorized' />\r\n    // }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                appLayout: route.appLayout\r\n                              }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                routeMeta: route.meta\r\n                              }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                wrapperClass: route.className\r\n                              }\r\n                              : {})}\r\n                          /*eslint-enable */\r\n                          >\r\n                            {/* <route.component {...props} /> */}\r\n                            <FinalRoute route={route} {...props} />\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        />\r\n        {/* <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return <Redirect to={DefaultRoute} />\r\n          }}\r\n        /> */}\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = props => <Router />\r\n\r\nexport default App\r\n","// ** Auth Endpoints\r\n// const BaseUrl = \"http://cashmind-api.test/api/v1\"\r\nconst BaseUrl = \"https://api.cashmind.in/api/v1\"\r\nexport default {\r\n  loginEndpoint: `${BaseUrl}/login`,\r\n  registerEndpoint: `${BaseUrl}/signup`,\r\n  refreshEndpoint: `${BaseUrl}/refresh-token`,\r\n  logoutEndpoint: `${BaseUrl}/logout`,\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n","import axios from 'axios'\r\nimport jwtDefaultConfig from './jwtDefaultConfig'\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8'\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\r\nexport default class JwtService {\r\n  // ** jwtConfig <= Will be used by this service\r\n  jwtConfig = { ...jwtDefaultConfig }\r\n\r\n  // ** For Refreshing Token\r\n  isAlreadyFetchingAccessToken = false\r\n\r\n  // ** For Refreshing Token\r\n  subscribers = []\r\n\r\n  constructor(jwtOverrideConfig) {\r\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\r\n\r\n    // ** Request Interceptor\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        // ** Get token from localStorage\r\n        const accessToken = this.getToken()\r\n\r\n        // ** If token is present add it to request's Authorization Header\r\n        if (accessToken) {\r\n          // ** eslint-disable-next-line no-param-reassign\r\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n        }\r\n        return config\r\n      },\r\n      error => Promise.reject(error)\r\n    )\r\n\r\n    // ** Add request/response interceptor\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // ** const { config, response: { status } } = error\r\n        const { config, response } = error\r\n        const originalRequest = config\r\n\r\n        // ** if (status === 401) {\r\n        if (response && response.status === 401) {\r\n          if (!this.isAlreadyFetchingAccessToken) {\r\n            this.isAlreadyFetchingAccessToken = true\r\n            this.refreshToken().then(r => {\r\n              this.isAlreadyFetchingAccessToken = false\r\n\r\n              // ** Update accessToken in localStorage\r\n              this.setToken(r.data.accessToken)\r\n              this.setRefreshToken(r.data.refreshToken)\r\n\r\n              this.onAccessTokenFetched(r.data.accessToken)\r\n            })\r\n          }\r\n          const retryOriginalRequest = new Promise(resolve => {\r\n            this.addSubscriber(accessToken => {\r\n              // ** Make sure to assign accessToken according to your response.\r\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\r\n              // ** Change Authorization header\r\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n              resolve(this.axios(originalRequest))\r\n            })\r\n          })\r\n          return retryOriginalRequest\r\n        }\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  onAccessTokenFetched(accessToken) {\r\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\r\n  }\r\n\r\n  addSubscriber(callback) {\r\n    this.subscribers.push(callback)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\r\n  }\r\n\r\n  setToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\r\n  }\r\n\r\n  setRefreshToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\r\n  }\r\n\r\n  login(...args) {\r\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\r\n  }\r\n\r\n  register(...args) {\r\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\r\n  }\r\n\r\n  refreshToken() {\r\n    return axios.post(this.jwtConfig.refreshEndpoint, {\r\n      refreshToken: this.getRefreshToken()\r\n    })\r\n  }\r\n}\r\n","// ** Core JWT Import\r\nimport useJwt from '@src/@core/auth/jwt/useJwt'\r\n\r\nconst { jwt } = useJwt({})\r\n\r\nexport default jwt\r\n","// ** JWT Service Import\r\nimport JwtService from './jwtService'\r\n\r\n// ** Export Service as useJwt\r\nexport default function useJwt(jwtOverrideConfig) {\r\n  const jwt = new JwtService(jwtOverrideConfig)\r\n\r\n  return {\r\n    jwt\r\n  }\r\n}\r\n","// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n","// ** Imports createContext function\r\nimport { createContext } from 'react'\r\n\r\n// ** Imports createContextualCan function\r\nimport { createContextualCan } from '@casl/react'\r\n\r\n// ** Create Context\r\nexport const AbilityContext = createContext()\r\n\r\n// ** Init Can Context\r\nexport const Can = createContextualCan(AbilityContext.client)\r\n","// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\n\nconst config = useJwt.jwtConfig\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, data.accessToken)\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(JSON.stringify(data.refreshToken)))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n"],"sourceRoot":""}