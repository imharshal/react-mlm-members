{"version":3,"sources":["views/funds/FundHistory.js","configs/apiConfig.js"],"names":["tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","FundHistory","useState","Transactions","setTransactions","Loading","setLoading","useEffect","axios","get","api","routes","fund_history","getUserId","auth","then","response","data","e","console","log","className","type","color","size","title","columns","field","defaultSort","icons","baseUrl","apiToken","useJwt","getToken","header","Authorization","updateProfile","localStorage","setItem","JSON","stringify","user","parse","getItem","id","headers","auth_token","post","signup","change_password","bank_account","purchase_plan","withdraw","transfer_fund","initiate_payment","complete_payment","member_list","profile","password_reset_link","verify_password_link","notifications","statistics","tree","members_in_levels","members_in_levels_count","payment_options","payment_qr","plans","active_plan","transactions_history","withdrawal_history","level_income_history","daily_income_history","direct_income_history","reward_income_history"],"mappings":"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","file":"static/js/31.fd7d97e4.chunk.js","sourcesContent":["import React, { forwardRef, useState, useEffect } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport { Spinner } from \"reactstrap\"\r\nimport axios from \"axios\"\r\nimport api, { getUserId } from \"../../configs/apiConfig\"\r\n// import SortIcon from \"@material-ui/icons/ArrowDownward\"\r\nimport CardBody from \"reactstrap/lib/CardBody\"\r\nimport MaterialTable from 'material-table'\r\n\r\nimport AddBox from '@material-ui/icons/AddBox'\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\r\nimport Check from '@material-ui/icons/Check'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRight from '@material-ui/icons/ChevronRight'\r\nimport Clear from '@material-ui/icons/Clear'\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\r\nimport Edit from '@material-ui/icons/Edit'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport FirstPage from '@material-ui/icons/FirstPage'\r\nimport LastPage from '@material-ui/icons/LastPage'\r\nimport Remove from '@material-ui/icons/Remove'\r\nimport SaveAlt from '@material-ui/icons/SaveAlt'\r\nimport Search from '@material-ui/icons/Search'\r\nimport ViewColumn from '@material-ui/icons/ViewColumn'\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n}\r\n\r\n\r\nconst columns = [\r\n    {\r\n        name: \"Title\",\r\n        selector: (row) => row.title\r\n    },\r\n    {\r\n        name: \"Year\",\r\n        selector: (row) => row.year\r\n    }\r\n]\r\n\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        title: \"Beetlejuice\",\r\n        year: \"1988\"\r\n    },\r\n    {\r\n        id: 2,\r\n        title: \"Ghostbusters\",\r\n        year: \"1984\"\r\n    }\r\n]\r\n\r\nconst FundHistory = () => {\r\n    const [Transactions, setTransactions] = useState([])\r\n    const [Loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        try {\r\n            axios\r\n                .get(`${api.routes.get.fund_history}/${getUserId()}`, api.auth)\r\n                //     // .then(response => console.log([response.data]))\r\n                .then(response => {\r\n                    setLoading(false)\r\n                    setTransactions(response.data.data)\r\n                })\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n            setLoading(false)\r\n            // MyAlert.fire('Invalid Request', 'Kindly relogin to fix this issue', 'error')\r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-12 w-100 h-100 d-flex justify-content-center align-items-center\">\r\n                {Loading && <div className=\"w-100 h-100 d-flex justify-content-center align-items-center\">\r\n                    <Spinner type='grow' color=\"primary\" size='lg' />\r\n                </div>}\r\n            </div>\r\n            {!Loading\r\n                && <MaterialTable\r\n                    title=\"Fund Wallet History\"\r\n                    columns={[\r\n                        { title: 'Date', field: 'created_at', type: 'datetime', defaultSort: 'desc' },\r\n                        { title: 'Transaction ID', field: 'txn_id' },\r\n                        { title: 'Type', field: 'type' },\r\n                        { title: 'Status', field: 'status' },\r\n                        { title: 'Amount', field: 'amount' }\r\n                    ]}\r\n                    data={Transactions}\r\n                    icons={tableIcons}\r\n\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FundHistory\r\n","import useJwt from '@src/auth/jwt/useJwt'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\n//also change url for JWT auth\r\n// const baseUrl = \"http://cashmind-api.test/api/v1\"\r\nconst baseUrl = \"https://api.cashmind.in/api/v1\"\r\nconst apiToken = useJwt.getToken()\r\nconst userData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\nconst auth = {\r\n    header: { Authorization: `Bearer ${apiToken}` },\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\r\n\r\n}\r\nconst headers = {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\r\n}\r\n// const [ProfileData, setProfileData] = useState(null)\r\nconst updateProfile = () => {\r\n    try {\r\n        axios\r\n            .get(`${baseUrl}/profile`, auth)\r\n            .then(response => {\r\n                // setProfileData(response.data.user)\r\n                localStorage.setItem('userData', JSON.stringify(response.data.user))\r\n                return true\r\n            })\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n        // MyAlert.fire('Invalid Request', 'Kindly relogin to fix this issue', 'error')\r\n    }\r\n}\r\n\r\nconst getUserId = () => {\r\n    try {\r\n        return JSON.parse(localStorage.getItem('userData')).id\r\n    } catch (e) {\r\n        return \"\"\r\n    }\r\n\r\n}\r\nconst api = {\r\n\r\n    baseUrl,\r\n    auth,\r\n    headers,\r\n    auth_token: `${apiToken}`,\r\n    routes: {\r\n        post: {\r\n            signup: `${baseUrl}/signup`,\r\n            change_password: `${baseUrl}/change-password`,\r\n            bank_account: `${baseUrl}/bank-account`, //requires auth\r\n            purchase_plan: `${baseUrl}/purchase-plan`, //requires auth // requires /{plan_id} and member_id in post\r\n            withdraw: `${baseUrl}/withdraw-fund`, //requires auth\r\n            transfer_fund: `${baseUrl}/fund-transfer`, //requires auth\r\n            initiate_payment: `${baseUrl}/initiate-payment`, //requires auth\r\n            complete_payment: `${baseUrl}/complete-payment` //requires auth\r\n        },\r\n        get: {\r\n            member_list: `${baseUrl}/member/list`,\r\n            profile: `${baseUrl}/profile`, //requires auth\r\n            password_reset_link: `${baseUrl}/password-reset-link`, //requires auth\r\n            verify_password_link: `${baseUrl}/verify-password-link`, //requires auth\r\n            notifications: `${baseUrl}/notifications`, //requires auth\r\n            statistics: `${baseUrl}/statistics`, //requires auth\r\n            tree: `${baseUrl}/tree`, //requires auth\r\n            members_in_levels: `${baseUrl}/members-in-levels`, //requires auth\r\n            members_in_levels_count: `${baseUrl}/members-in-levels-count`, //requires auth\r\n            bank_account: `${baseUrl}/bank-account`, //requires auth\r\n            payment_options: `${baseUrl}/payment-options/${getUserId()}`, //requires auth\r\n            payment_qr: `${baseUrl}/payment-qr/${getUserId()}`, //requires auth\r\n            plans: `${baseUrl}/plans`, //requires auth\r\n            active_plan: `${baseUrl}/active-plan`, //requires auth\r\n            transactions_history: `${baseUrl}/transactions-history}`, //requires auth\r\n            fund_history: `${baseUrl}/fund-wallet-history`, //requires auth\r\n            withdrawal_history: `${baseUrl}/withdrawal-history`, //requires auth\r\n            level_income_history: `${baseUrl}/level-income-history`, //requires auth\r\n            daily_income_history: `${baseUrl}/daily-income-history`, //requires auth\r\n            direct_income_history: `${baseUrl}/direct-income-history`, //requires auth\r\n            reward_income_history: `${baseUrl}/reward-income-history` //requires auth\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default api\r\nexport { updateProfile, getUserId }\r\n\r\n//way to import this\r\n// import api from '@configs/apiConfig'\r\n"],"sourceRoot":""}