{"version":3,"sources":["views/pages/BankDetails.js","configs/apiConfig.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js"],"names":["MyAlert","withReactContent","Swal","SignupSchema","yup","shape","acholder","required","bank_name","acno","ifsc","PersonalInfo","type","useForm","mode","resolver","yupResolver","register","handleSubmit","errors","control","formState","trigger","useState","UserData","setUserData","BankAccount","setBankAccount","useEffect","JSON","parse","localStorage","getItem","axios","get","api","routes","bank_account","getUserId","auth","then","response","data","catch","error","fire","e","className","onSubmit","Data","member_id","post","title","text","icon","customClass","confirmButton","buttonsStyling","location","reload","tag","Col","md","for","name","id","value","placeholder","classnames","message","Ripple","color","size","baseUrl","apiToken","useJwt","getToken","header","Authorization","updateProfile","setItem","stringify","user","console","log","headers","auth_token","signup","change_password","purchase_plan","withdraw","transfer_fund","initiate_payment","complete_payment","member_list","profile","password_reset_link","verify_password_link","notifications","statistics","tree","members_in_levels","members_in_levels_count","payment_options","payment_qr","plans","active_plan","transactions_history","fund_history","withdrawal_history","level_income_history","daily_income_history","direct_income_history","reward_income_history","propTypes","tagPropType","inverse","PropTypes","bool","string","body","outline","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardBody","CardTitle","CardHeader"],"mappings":"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","file":"static/js/28.a23a3e08.chunk.js","sourcesContent":["/* eslint-disable no-tabs */\r\nimport { Fragment, useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\nimport '@styles/react/libs/react-select/_react-select.scss'\r\nimport classnames from 'classnames'\r\nimport { ArrowLeft, ArrowRight } from 'react-feather'\r\nimport { selectThemeColors, isObjEmpty } from '@utils'\r\nimport { Label, FormGroup, Row, Col, Button, Form, Input, FormFeedback, Card, CardBody, CardHeader, CardTitle } from 'reactstrap'\r\n\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport Cleave from 'cleave.js/react'\r\nimport 'cleave.js/dist/addons/cleave-phone.in'\r\nimport InputMask from 'react-input-mask'\r\nimport axios from 'axios'\r\nimport api, { getUserId } from '../../configs/apiConfig'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport Swal from 'sweetalert2'\r\n\r\n//Preserve From state\r\nconst MyAlert = withReactContent(Swal)\r\n\r\nconst SignupSchema = yup.object().shape({\r\n\r\n    acholder: yup.string().required(\"Account holder name is required\"),\r\n    bank_name: yup.string().required(\"Bank name is required\"),\r\n    acno: yup.string().required(\"Account no. is required\"),\r\n    ifsc: yup.string().required(\"IFSC no. is required\")\r\n})\r\n// password: yup.string().required(\"Password is required\"),\r\n// confirmPassword: yup\r\n//   .string()\r\n//   .required()\r\n//   .oneOf([yup.ref(password), null], 'Passwords must match')\r\n\r\n// const bank = {\r\n//     acholder: \"Harshal Bokade\",\r\n//     bank_name: \"SBI\",\r\n//     acno: \"123456789\",\r\n//     ifsc: \"SBI00420\"\r\n// }\r\n\r\nconst PersonalInfo = ({ type = 'bank' }) => {\r\n\r\n    const { register, handleSubmit, control, formState: { errors }, trigger } = useForm({\r\n        mode: \"onBlur\",\r\n        resolver: yupResolver(SignupSchema)\r\n    })\r\n    const [UserData, setUserData] = useState([])\r\n    const [NotUpdated, setNotUpdated] = useState(false)\r\n    const [BankAccount, setBankAccount] = useState([])\r\n\r\n    useEffect(() => {\r\n        setUserData(JSON.parse(localStorage.getItem('userData')))\r\n    }, [])\r\n\r\n    const handleUpdateRequest = () => {\r\n        MyAlert.fire({\r\n            title: 'You have successfully updated the bank account',\r\n            text: '',\r\n            icon: 'success',\r\n            // confirmButtonText: 'OK',\r\n            customClass: {\r\n                confirmButton: 'btn btn-primary'\r\n            },\r\n            buttonsStyling: false\r\n        }).then(() => location.reload())\r\n    }\r\n\r\n    useEffect(() => {\r\n        try {\r\n            axios\r\n                .get(`${api.routes.get.bank_account}/${getUserId()}`, api.auth)\r\n                .then(response => setBankAccount(response.data.data))\r\n                .catch(error => {\r\n                    MyAlert.fire('Kindly update your bank account for hassle free payouts', '', 'info')\r\n                })\r\n        } catch (e) {\r\n            MyAlert.fire('Invalid Request', 'Kindly relogin to fix this issue', 'error')\r\n        }\r\n        // (response.data.user)\r\n        // setUser(selectedUser)\r\n    }, [])\r\n    const onSubmit = (data) => {\r\n        trigger()\r\n        const Data = {\r\n            member_id: UserData['id'],\r\n            ...data\r\n        }\r\n        // console.log(Data)\r\n        axios\r\n            .post(api.routes.post.bank_account, Data, api.auth)\r\n            .then(response => {\r\n                handleUpdateRequest()\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"container\">\r\n\r\n                <CardHeader>\r\n                    <CardTitle>Bank Details</CardTitle>\r\n                </CardHeader>\r\n                <CardBody className=\"\">\r\n\r\n                    <Form onSubmit={handleSubmit(onSubmit)} className=\"\">\r\n                        <Row>\r\n                            <FormGroup tag={Col} md='6'>\r\n                                <Label className='form-label' for={`account-holder-${type}`}>\r\n                                    Account holder name\r\n                                </Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='acholder'\r\n                                    id={`account-holder-${type}`}\r\n                                    value={BankAccount && BankAccount.acholder}\r\n                                    placeholder='Ac holder name'\r\n                                    {...register('acholder')}\r\n                                    className={classnames({ 'is-invalid': errors['acholder'] })}\r\n                                />\r\n                                {errors.acholder && <FormFeedback>{errors.acholder.message}</FormFeedback>}\r\n                            </FormGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <FormGroup tag={Col} md='6'>\r\n                                <Label className='form-label' for={`bank-name-${type}`}>\r\n                                    Bank name\r\n                                </Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='bank_name'\r\n                                    value={BankAccount && BankAccount.bank_name}\r\n\r\n                                    id={`bank-name-${type}`}\r\n                                    placeholder='Bank name'\r\n                                    {...register('bank_name')}\r\n                                    className={classnames({ 'is-invalid': errors['bank_name'] })}\r\n                                />\r\n                                {errors.bank_name && <FormFeedback>{errors.bank_name.message}</FormFeedback>}\r\n                            </FormGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <FormGroup tag={Col} md='6'>\r\n                                <Label className='form-label' for={`account-number-${type}`}>\r\n                                    Account no.\r\n                                </Label>\r\n                                <Input\r\n                                    type='number'\r\n                                    name='acno'\r\n                                    value={BankAccount && BankAccount.acno}\r\n                                    id={`account-number-${type}`}\r\n                                    placeholder='Account no.'\r\n                                    {...register('acno')}\r\n                                    className={classnames({ 'is-invalid': errors['acno'] })}\r\n                                />\r\n                                {errors.acno && <FormFeedback>{errors.acno.message}</FormFeedback>}\r\n                            </FormGroup>\r\n                        </Row>\r\n                        <Row>\r\n                            <FormGroup tag={Col} md='6'>\r\n                                <Label className='form-label' for={`account-ifsc-${type}`}>\r\n                                    IFSC code\r\n                                </Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    name='ifsc'\r\n                                    value={BankAccount && BankAccount.ifsc}\r\n                                    id={`account-ifsc-${type}`}\r\n                                    placeholder='IFSC'\r\n                                    {...register('ifsc')}\r\n                                    className={classnames({ 'is-invalid': errors['ifsc'] })}\r\n                                />\r\n                                {errors.ifsc && <FormFeedback>{errors.ifsc.message}</FormFeedback>}\r\n                            </FormGroup>\r\n                        </Row>\r\n\r\n                        {BankAccount && !BankAccount.acno && <div className='d-flex justify-content-left'>\r\n                            <Button.Ripple type='submit' color='primary' className='btn-next'>\r\n                                <span className='align-middle d-sm-inline-block d-none'>Submit</span>\r\n                                <ArrowRight size={14} className='align-middle ml-sm-25 ml-0'></ArrowRight>\r\n                            </Button.Ripple>\r\n                        </div>}\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </ >\r\n    )\r\n}\r\n\r\nexport default PersonalInfo\r\n\r\n","import useJwt from '@src/auth/jwt/useJwt'\r\nimport axios from 'axios'\r\nimport { useState, useEffect } from 'react'\r\n//also change url for JWT auth\r\n// const baseUrl = \"http://cashmind-api.test/api/v1\"\r\nconst baseUrl = \"https://api.cashmind.in/api/v1\"\r\nconst apiToken = useJwt.getToken()\r\nconst userData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\nconst auth = {\r\n    header: { Authorization: `Bearer ${apiToken}` },\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\r\n\r\n}\r\nconst headers = {\r\n    \"Access-Control-Allow-Origin\": \"*\",\r\n    \"Access-Control-Allow-Methods\": \"GET,PUT,POST,DELETE,PATCH,OPTIONS\"\r\n}\r\n// const [ProfileData, setProfileData] = useState(null)\r\nconst updateProfile = () => {\r\n    try {\r\n        axios\r\n            .get(`${baseUrl}/profile`, auth)\r\n            .then(response => {\r\n                // setProfileData(response.data.user)\r\n                localStorage.setItem('userData', JSON.stringify(response.data.user))\r\n                return true\r\n            })\r\n\r\n    } catch (e) {\r\n        console.log(e)\r\n        // MyAlert.fire('Invalid Request', 'Kindly relogin to fix this issue', 'error')\r\n    }\r\n}\r\n\r\nconst getUserId = () => {\r\n    try {\r\n        return JSON.parse(localStorage.getItem('userData')).id\r\n    } catch (e) {\r\n        return \"\"\r\n    }\r\n\r\n}\r\nconst api = {\r\n\r\n    baseUrl,\r\n    auth,\r\n    headers,\r\n    auth_token: `${apiToken}`,\r\n    routes: {\r\n        post: {\r\n            signup: `${baseUrl}/signup`,\r\n            change_password: `${baseUrl}/change-password`,\r\n            bank_account: `${baseUrl}/bank-account`, //requires auth\r\n            purchase_plan: `${baseUrl}/purchase-plan`, //requires auth // requires /{plan_id} and member_id in post\r\n            withdraw: `${baseUrl}/withdraw-fund`, //requires auth\r\n            transfer_fund: `${baseUrl}/fund-transfer`, //requires auth\r\n            initiate_payment: `${baseUrl}/initiate-payment`, //requires auth\r\n            complete_payment: `${baseUrl}/complete-payment` //requires auth\r\n        },\r\n        get: {\r\n            member_list: `${baseUrl}/member/list`,\r\n            profile: `${baseUrl}/profile`, //requires auth\r\n            password_reset_link: `${baseUrl}/password-reset-link`, //requires auth\r\n            verify_password_link: `${baseUrl}/verify-password-link`, //requires auth\r\n            notifications: `${baseUrl}/notifications`, //requires auth\r\n            statistics: `${baseUrl}/statistics`, //requires auth\r\n            tree: `${baseUrl}/tree`, //requires auth\r\n            members_in_levels: `${baseUrl}/members-in-levels`, //requires auth\r\n            members_in_levels_count: `${baseUrl}/members-in-levels-count`, //requires auth\r\n            bank_account: `${baseUrl}/bank-account`, //requires auth\r\n            payment_options: `${baseUrl}/payment-options/${getUserId()}`, //requires auth\r\n            payment_qr: `${baseUrl}/payment-qr/${getUserId()}`, //requires auth\r\n            plans: `${baseUrl}/plans`, //requires auth\r\n            active_plan: `${baseUrl}/active-plan`, //requires auth\r\n            transactions_history: `${baseUrl}/transactions-history}`, //requires auth\r\n            fund_history: `${baseUrl}/fund-wallet-history`, //requires auth\r\n            withdrawal_history: `${baseUrl}/withdrawal-history`, //requires auth\r\n            level_income_history: `${baseUrl}/level-income-history`, //requires auth\r\n            daily_income_history: `${baseUrl}/daily-income-history`, //requires auth\r\n            direct_income_history: `${baseUrl}/direct-income-history`, //requires auth\r\n            reward_income_history: `${baseUrl}/reward-income-history` //requires auth\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default api\r\nexport { updateProfile, getUserId }\r\n\r\n//way to import this\r\n// import api from '@configs/apiConfig'\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;"],"sourceRoot":""}