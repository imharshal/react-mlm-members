{"version":3,"sources":["utility/Utils.js","@core/components/avatar/index.js","utility/hooks/useSkin.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","@core/auth/jwt/useJwt.js","utility/context/Can.js","redux/actions/auth/index.js","redux/actions/layout/index.js","@core/layouts/components/layout-wrapper/index.js","router/routes/plans.js","router/routes/profile.js","router/routes/withdraw.js","router/routes/income-reports.js","router/routes/sidebar.js","router/routes/myteam.js","router/routes/index.js","@core/layouts/BlankLayout.js","@core/components/customizer/index.js","@core/layouts/components/footer/index.js","@core/layouts/components/navbar/UserDropdown.js","@core/layouts/components/navbar/NavbarUser.js","@core/layouts/components/navbar/index.js","navigation/vertical/index.js","@core/layouts/components/menu/vertical-menu/VerticalMenuHeader.js","@core/layouts/utils.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuLink.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuGroup.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuSectionHeader.js","@core/layouts/components/menu/vertical-menu/VerticalNavMenuItems.js","@core/layouts/components/menu/vertical-menu/index.js","utility/hooks/useRTL.js","utility/hooks/useNavbarType.js","utility/hooks/useFooterType.js","utility/hooks/useNavbarColor.js","@core/layouts/VerticalLayout.js","layouts/VerticalLayout.js","navigation/horizontal/index.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuLink.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuGroup.js","@core/layouts/components/menu/horizontal-menu/HorizontalNavMenuItems.js","@core/layouts/components/menu/horizontal-menu/index.js","@core/layouts/HorizontalLayout.js","layouts/HorizontalLayout.js","router/Router.js","utility/hooks/useLayout.js","utility/hooks/useRouterTransition.js","App.js"],"names":["isObjEmpty","obj","Object","keys","length","kFormatter","num","toFixed","isUserLoggedIn","localStorage","getItem","selectThemeColors","theme","colors","primary25","primary","neutral10","neutral20","neutral30","Avatar","forwardRef","props","ref","color","className","imgClassName","initials","size","badgeUp","content","icon","badgeColor","badgeText","img","imgHeight","imgWidth","status","Tag","tag","contentStyles","rest","classnames","undefined","style","str","results","split","forEach","e","push","join","getInitials","pill","src","alt","height","width","defaultProps","useSkin","useState","item","window","JSON","parse","themeConfig","layout","skin","error","console","log","setSkin","useEffect","element","document","body","classList","remove","add","dark","bordered","value","valueToStore","Function","setItem","stringify","BaseUrl","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","axios","defaults","headers","post","JwtService","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","interceptors","request","use","config","accessToken","getToken","Authorization","Promise","reject","response","originalRequest","refreshToken","then","r","setToken","data","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","args","getRefreshToken","jwt","AbilityContext","createContext","createContextualCan","client","useJwt","handleLogin","dispatch","type","handleLogout","removeItem","handleContentWidth","handleMenuCollapsed","handleMenuHidden","LayoutWrapper","children","appLayout","wrapperClass","transition","routeMeta","useDispatch","store","useSelector","state","navbarStore","navbar","contentWidth","Fragment","menuCollapsed","menuHidden","query","PlansRoutes","path","component","lazy","ProfileRoutes","meta","navLink","WithdrawRoutes","IncomeReportRoutes","SidebarRoutes","MyteamRoutes","Routes","authRoute","BlankLayout","isMounted","setIsMounted","Customizer","isRtl","setIsRtl","setLayout","navbarType","setNavbarType","footerType","setFooterType","navbarColor","setNavbarColor","isHidden","setIsHidden","setContentWidth","setMenuCollapsed","setTransition","openCustomizer","setOpenCustomizer","handleToggle","preventDefault","transitionOptions","label","transitionValue","find","i","open","href","onClick","FormGroup","skinsArr","name","checked","map","radio","index","marginCondition","CustomInput","id","onChange","renderSkinsRadio","classNamePrefix","defaultValue","options","isClearable","selected","border","navbarTypeArr","renderNavbarTypeRadio","footerTypeArr","renderFooterTypeRadio","Footer","Date","getFullYear","target","rel","UserDropdown","userData","setUserData","avatar","defaultAvatar","UncontrolledDropdown","DropdownToggle","username","borderRadius","fontSize","renderUserImg","DropdownMenu","right","DropdownItem","Link","to","NavbarUser","setMenuVisibility","ThemeToggler","NavItem","NavLink","ThemeNavbar","title","VerticalMenuHeader","setGroupOpen","menuHover","Toggler","app","appLogoImage","appName","isNavLinkActive","link","currentURL","routerProps","isNavGroupActive","some","child","search","navigation","result","getAllParents","match","res","recurse","current","key","VerticalNavMenuLink","setGroupActive","groupActive","activeItem","setActiveItem","groupOpen","toggleActiveGroup","parentItem","currentActiveItem","LinkTag","externalLink","location","useLocation","pathname","matchPath","exact","strict","arr","parents","searchParents","disabled","active","newTab","isActive","url","resetActiveGroup","badge","Badge","VerticalNavMenuGroup","allParents","activeArr","includes","splice","indexOf","openArr","val","onCollapseClick","pop","toggleOpenGroup","Collapse","isOpen","VerticalNavMenuItems","items","VerticalNavMenuSectionHeader","header","VerticalMenuNavItems","Components","TagName","resolveNavItemComponent","Sidebar","menu","setMenuHover","shadowRef","useRef","expanded","onMouseEnter","onMouseLeave","wheelPropagation","onScrollY","container","scrollTop","contains","scrollMenu","useRTL","isRTL","getElementsByTagName","setAttribute","handleRTL","useNavbarType","useFooterType","footer","useNavbarColor","backgroundColor","VerticalLayout","menuVisibility","innerWidth","windowWidth","setWindowWidth","layoutStore","handleWindowWidth","addEventListener","footerClasses","static","sticky","hidden","bgColorCondition","floating","Navbar","expand","light","show","customizer","showUnder","bottom","Button","HorizontalNavMenuLink","setOpenDropdown","isChild","HorizontalNavMenuGroup","submenu","openDropdown","menuModifiers","setMaxHeight","enabled","fn","stylesObj","pageHeight","innerHeight","ddTop","instance","reference","getBoundingClientRect","top","popper","maxHeight","overflowY","ddRef","left","closest","styles","Dropdown","toggle","modifiers","HorizontalNavMenuItems","HorizontalMenu","HorizontalLayout","navbarScrolled","setNavbarScrolled","pageYOffset","navbarClasses","Router","lastLayout","setLastLayout","handleLayout","useLayout","routerTransition","useRouterTransition","DefaultLayout","useContext","Layouts","NotAuthorized","Error","FinalRoute","route","action","resource","publicRoute","basename","process","render","LayoutTag","LayoutRoutes","LayoutPaths","LayoutRoutesAndPaths","assign","fallback","App"],"mappings":"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","file":"static/js/11.0790ebc7.chunk.js","sourcesContent":["// ** Checks if an object is empty (returns boolean)\r\nexport const isObjEmpty = obj => Object.keys(obj).length === 0\r\n\r\n// ** Returns K format from a number\r\nexport const kFormatter = num => (num > 999 ? `${(num / 1000).toFixed(1)}k` : num)\r\n\r\n// ** Converts HTML to string\r\nexport const htmlToString = html => html.replace(/<\\/?[^>]+(>|$)/g, '')\r\n\r\n// ** Checks if the passed date is today\r\nconst isToday = date => {\r\n  const today = new Date()\r\n  return (\r\n    /* eslint-disable operator-linebreak */\r\n    date.getDate() === today.getDate() &&\r\n    date.getMonth() === today.getMonth() &&\r\n    date.getFullYear() === today.getFullYear()\r\n    /* eslint-enable */\r\n  )\r\n}\r\n\r\n/**\r\n ** Format and return date in Humanize format\r\n ** Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\r\n ** Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\r\n * @param {String} value date to format\r\n * @param {Object} formatting Intl object to format with\r\n */\r\nexport const formatDate = (value, formatting = { month: 'short', day: 'numeric', year: 'numeric' }) => {\r\n  if (!value) return value\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n// ** Returns short month of passed date\r\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\r\n  const date = new Date(value)\r\n  let formatting = { month: 'short', day: 'numeric' }\r\n\r\n  if (toTimeForCurrentDay && isToday(date)) {\r\n    formatting = { hour: 'numeric', minute: 'numeric' }\r\n  }\r\n\r\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value))\r\n}\r\n\r\n/**\r\n ** Return if user is logged in\r\n ** This is completely up to you and how you want to store the token in your frontend application\r\n *  ? e.g. If you are using cookies to store the application please update this function\r\n */\r\nexport const isUserLoggedIn = () => localStorage.getItem('userData')\r\nexport const getUserData = () => JSON.parse(localStorage.getItem('userData'))\r\n\r\n/**\r\n ** This function is used for demo purpose route navigation\r\n ** In real app you won't need this function because your app will navigate to same route for each users regardless of ability\r\n ** Please note role field is just for showing purpose it's not used by anything in frontend\r\n ** We are checking role just for ease\r\n * ? NOTE: If you have different pages to navigate based on user ability then this function can be useful. However, you need to update it.\r\n * @param {String} userRole Role of user\r\n */\r\nexport const getHomeRouteForLoggedInUser = userRole => {\r\n  if (userRole === 'admin') return '/'\r\n  if (userRole === 'client') return '/access-control'\r\n  return '/login'\r\n}\r\n\r\n// ** React Select Theme Colors\r\nexport const selectThemeColors = theme => ({\r\n  ...theme,\r\n  colors: {\r\n    ...theme.colors,\r\n    primary25: '#7367f01a', // for option hover bg-color\r\n    primary: '#7367f0', // for selected option bg-color\r\n    neutral10: '#7367f0', // for tags bg-color\r\n    neutral20: '#ededed', // for input border-color\r\n    neutral30: '#ededed' // for input hover border-color\r\n  }\r\n})\r\n","// ** React Imports\nimport { forwardRef } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\nconst Avatar = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    color,\n    className,\n    imgClassName,\n    initials,\n    size,\n    badgeUp,\n    content,\n    icon,\n    badgeColor,\n    badgeText,\n    img,\n    imgHeight,\n    imgWidth,\n    status,\n    tag: Tag,\n    contentStyles,\n    ...rest\n  } = props\n\n  // ** Function to extract initials from content\n  const getInitials = str => {\n    const results = []\n    const wordArray = str.split(' ')\n    wordArray.forEach(e => {\n      results.push(e[0])\n    })\n    return results.join('')\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar', {\n        [className]: className,\n        [`bg-${color}`]: color,\n        [`avatar-${size}`]: size\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {img === false || img === undefined ? (\n        <span\n          className={classnames('avatar-content', {\n            'position-relative': badgeUp\n          })}\n          style={contentStyles}\n        >\n          {initials ? getInitials(content) : content}\n\n          {icon ? icon : null}\n          {badgeUp ? (\n            <Badge color={badgeColor ? badgeColor : 'primary'} className='badge-sm badge-up' pill>\n              {badgeText ? badgeText : '0'}\n            </Badge>\n          ) : null}\n        </span>\n      ) : (\n        <img\n          className={classnames({\n            [imgClassName]: imgClassName\n          })}\n          src={img}\n          alt='avatarImg'\n          height={imgHeight && !size ? imgHeight : 32}\n          width={imgWidth && !size ? imgWidth : 32}\n        />\n      )}\n      {status ? (\n        <span\n          className={classnames({\n            [`avatar-status-${status}`]: status,\n            [`avatar-status-${size}`]: size\n          })}\n        ></span>\n      ) : null}\n    </Tag>\n  )\n})\n\nexport default Avatar\n\n// ** PropTypes\nAvatar.propTypes = {\n  imgClassName: Proptypes.string,\n  className: Proptypes.string,\n  src: Proptypes.string,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string]),\n  badgeUp: Proptypes.bool,\n  content: Proptypes.string,\n  icon: Proptypes.node,\n  contentStyles: Proptypes.object,\n  badgeText: Proptypes.string,\n  imgHeight: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  imgWidth: Proptypes.oneOfType([Proptypes.string, Proptypes.number]),\n  size: Proptypes.oneOf(['sm', 'lg', 'xl']),\n  status: Proptypes.oneOf(['online', 'offline', 'away', 'busy']),\n  badgeColor: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  color: Proptypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'info',\n    'warning',\n    'dark',\n    'light-primary',\n    'light-secondary',\n    'light-success',\n    'light-danger',\n    'light-info',\n    'light-warning',\n    'light-dark'\n  ]),\n  initials(props) {\n    if (props['initials'] && props['content'] === undefined) {\n      return new Error('content prop is required with initials prop.')\n    }\n    if (props['initials'] && typeof props['content'] !== 'string') {\n      return new Error('content prop must be a string.')\n    }\n    if (typeof props['initials'] !== 'boolean' && props['initials'] !== undefined) {\n      return new Error('initials must be a boolean!')\n    }\n  }\n}\n\n// ** Default Props\nAvatar.defaultProps = {\n  tag: 'div'\n}\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useSkin = () => {\r\n  // ** State\r\n  const [skin, setSkin] = useState(() => {\r\n    try {\r\n      // ** Get from local storage by key\r\n      const item = window.localStorage.getItem('skin')\r\n      // ** Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : themeConfig.layout.skin\r\n    } catch (error) {\r\n      // ** If error also return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.skin\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(skin) : value\r\n      // ** Set state\r\n      setSkin(valueToStore)\r\n      // ** Save to local storage\r\n      window.localStorage.setItem('skin', JSON.stringify(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get Body Tag\r\n    const element = window.document.body\r\n\r\n    // ** Define classnames for skins\r\n    const classNames = {\r\n      dark: 'dark-layout',\r\n      bordered: 'bordered-layout',\r\n      'semi-dark': 'semi-dark-layout'\r\n    }\r\n\r\n    // ** Remove all classes from Body on mount\r\n    element.classList.remove(...element.classList)\r\n\r\n    // ** If skin is not light add skin class\r\n    if (skin !== 'light') {\r\n      element.classList.add(classNames[skin])\r\n    }\r\n  }, [skin])\r\n\r\n  return [skin, setValue]\r\n}\r\n","// ** Auth Endpoints\r\n// const BaseUrl = \"http://cashmind-api.test/api/v1\"\r\nconst BaseUrl = \"https://api.cashmind.in/api/v1\"\r\nexport default {\r\n  loginEndpoint: `${BaseUrl}/login`,\r\n  registerEndpoint: `${BaseUrl}/signup`,\r\n  refreshEndpoint: `${BaseUrl}/refresh-token`,\r\n  logoutEndpoint: `${BaseUrl}/logout`,\r\n\r\n  // ** This will be prefixed in authorization header with token\r\n  // ? e.g. Authorization: Bearer <token>\r\n  tokenType: 'Bearer',\r\n\r\n  // ** Value of this property will be used as key to store JWT token in storage\r\n  storageTokenKeyName: 'accessToken',\r\n  storageRefreshTokenKeyName: 'refreshToken'\r\n}\r\n","import axios from 'axios'\r\nimport jwtDefaultConfig from './jwtDefaultConfig'\r\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8'\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\r\nexport default class JwtService {\r\n  // ** jwtConfig <= Will be used by this service\r\n  jwtConfig = { ...jwtDefaultConfig }\r\n\r\n  // ** For Refreshing Token\r\n  isAlreadyFetchingAccessToken = false\r\n\r\n  // ** For Refreshing Token\r\n  subscribers = []\r\n\r\n  constructor(jwtOverrideConfig) {\r\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\r\n\r\n    // ** Request Interceptor\r\n    axios.interceptors.request.use(\r\n      config => {\r\n        // ** Get token from localStorage\r\n        const accessToken = this.getToken()\r\n\r\n        // ** If token is present add it to request's Authorization Header\r\n        if (accessToken) {\r\n          // ** eslint-disable-next-line no-param-reassign\r\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n        }\r\n        return config\r\n      },\r\n      error => Promise.reject(error)\r\n    )\r\n\r\n    // ** Add request/response interceptor\r\n    axios.interceptors.response.use(\r\n      response => response,\r\n      error => {\r\n        // ** const { config, response: { status } } = error\r\n        const { config, response } = error\r\n        const originalRequest = config\r\n\r\n        // ** if (status === 401) {\r\n        if (response && response.status === 401) {\r\n          if (!this.isAlreadyFetchingAccessToken) {\r\n            this.isAlreadyFetchingAccessToken = true\r\n            this.refreshToken().then(r => {\r\n              this.isAlreadyFetchingAccessToken = false\r\n\r\n              // ** Update accessToken in localStorage\r\n              this.setToken(r.data.accessToken)\r\n              this.setRefreshToken(r.data.refreshToken)\r\n\r\n              this.onAccessTokenFetched(r.data.accessToken)\r\n            })\r\n          }\r\n          const retryOriginalRequest = new Promise(resolve => {\r\n            this.addSubscriber(accessToken => {\r\n              // ** Make sure to assign accessToken according to your response.\r\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\r\n              // ** Change Authorization header\r\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\r\n              resolve(this.axios(originalRequest))\r\n            })\r\n          })\r\n          return retryOriginalRequest\r\n        }\r\n        return Promise.reject(error)\r\n      }\r\n    )\r\n  }\r\n\r\n  onAccessTokenFetched(accessToken) {\r\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\r\n  }\r\n\r\n  addSubscriber(callback) {\r\n    this.subscribers.push(callback)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\r\n  }\r\n\r\n  setToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\r\n  }\r\n\r\n  setRefreshToken(value) {\r\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\r\n  }\r\n\r\n  login(...args) {\r\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\r\n  }\r\n\r\n  register(...args) {\r\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\r\n  }\r\n\r\n  refreshToken() {\r\n    return axios.post(this.jwtConfig.refreshEndpoint, {\r\n      refreshToken: this.getRefreshToken()\r\n    })\r\n  }\r\n}\r\n","// ** Core JWT Import\r\nimport useJwt from '@src/@core/auth/jwt/useJwt'\r\n\r\nconst { jwt } = useJwt({})\r\n\r\nexport default jwt\r\n","// ** JWT Service Import\r\nimport JwtService from './jwtService'\r\n\r\n// ** Export Service as useJwt\r\nexport default function useJwt(jwtOverrideConfig) {\r\n  const jwt = new JwtService(jwtOverrideConfig)\r\n\r\n  return {\r\n    jwt\r\n  }\r\n}\r\n","// ** Imports createContext function\r\nimport { createContext } from 'react'\r\n\r\n// ** Imports createContextualCan function\r\nimport { createContextualCan } from '@casl/react'\r\n\r\n// ** Create Context\r\nexport const AbilityContext = createContext()\r\n\r\n// ** Init Can Context\r\nexport const Can = createContextualCan(AbilityContext.client)\r\n","// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\n\nconst config = useJwt.jwtConfig\n// ** Handle User Login\nexport const handleLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: 'LOGIN',\n      data,\n      config,\n      [config.storageTokenKeyName]: data[config.storageTokenKeyName],\n      [config.storageRefreshTokenKeyName]: data[config.storageRefreshTokenKeyName]\n    })\n\n    // ** Add to user, accessToken & refreshToken to localStorage\n    localStorage.setItem('userData', JSON.stringify(data))\n    localStorage.setItem(config.storageTokenKeyName, data.accessToken)\n    localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(JSON.stringify(data.refreshToken)))\n  }\n}\n\n// ** Handle User Logout\nexport const handleLogout = () => {\n  return dispatch => {\n    dispatch({ type: 'LOGOUT', [config.storageTokenKeyName]: null, [config.storageRefreshTokenKeyName]: null })\n\n    // ** Remove user, accessToken & refreshToken from localStorage\n    localStorage.removeItem('userData')\n    localStorage.removeItem(config.storageTokenKeyName)\n    localStorage.removeItem(config.storageRefreshTokenKeyName)\n  }\n}\n","// ** Handles Layout Content Width (full / boxed)\r\nexport const handleContentWidth = value => dispatch => dispatch({ type: 'HANDLE_CONTENT_WIDTH', value })\r\n\r\n// ** Handles Menu Collapsed State (Bool)\r\nexport const handleMenuCollapsed = value => dispatch => dispatch({ type: 'HANDLE_MENU_COLLAPSED', value })\r\n\r\n// ** Handles Menu Hidden State (Bool)\r\nexport const handleMenuHidden = value => dispatch => dispatch({ type: 'HANDLE_MENU_HIDDEN', value })\r\n\r\n// ** Handles RTL (Bool)\r\nexport const handleRTL = value => dispatch => dispatch({ type: 'HANDLE_RTL', value })\r\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleContentWidth, handleMenuCollapsed, handleMenuHidden } from '@store/actions/layout'\n\n// ** Styles\nimport 'animate.css/animate.css'\n\nconst LayoutWrapper = props => {\n  // ** Props\n  const { layout, children, appLayout, wrapperClass, transition, routeMeta } = props\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state)\n  const navbarStore = store.navbar\n  const contentWidth = store.layout.contentWidth\n\n  //** Vars\n  const Tag = layout === 'HorizontalLayout' && !appLayout ? 'div' : Fragment\n\n  // ** Clean Up Function\n  const cleanUp = () => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth('full'))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(!routeMeta.menuHidden))\n      }\n    }\n  }\n\n  // ** ComponentDidMount\n  useEffect(() => {\n    if (routeMeta) {\n      if (routeMeta.contentWidth) {\n        dispatch(handleContentWidth(routeMeta.contentWidth))\n      }\n      if (routeMeta.menuCollapsed) {\n        dispatch(handleMenuCollapsed(routeMeta.menuCollapsed))\n      }\n      if (routeMeta.menuHidden) {\n        dispatch(handleMenuHidden(routeMeta.menuHidden))\n      }\n    }\n    return () => cleanUp()\n  }, [])\n\n  return (\n    <div\n      className={classnames('app-content content overflow-hidden', {\n        [wrapperClass]: wrapperClass,\n        'show-overlay': navbarStore.query.length\n      })}\n    >\n      <div className='content-overlay'></div>\n      <div className='header-navbar-shadow' />\n      <div\n        className={classnames({\n          'content-wrapper': !appLayout,\n          'content-area-wrapper': appLayout,\n          'container p-0': contentWidth === 'boxed',\n          [`animate__animated animate__${transition}`]: transition !== 'none' && transition.length\n        })}\n      >\n        <Tag\n          /*eslint-disable */\n          {...(layout === 'HorizontalLayout' && !appLayout\n            ? { className: classnames({ 'content-body': !appLayout }) }\n            : {})}\n          /*eslint-enable */\n        >\n          {children}\n        </Tag>\n      </div>\n    </div>\n  )\n}\n\nexport default LayoutWrapper\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst PlansRoutes = [\r\n    //authentication routes\r\n    {\r\n        path: '/plans',\r\n        component: lazy(() => import('../../views/plans/Plans'))\r\n    },\r\n    {\r\n        path: '/plans/active',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n\r\n        // component: lazy(() => import('../../views/plans/ActivePlans'))\r\n    }\r\n]\r\n\r\nexport { PlansRoutes }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst ProfileRoutes = [\r\n    //authentication routes\r\n\r\n    {\r\n        path: '/profile',\r\n        component: lazy(() => import('../../views/profile')),\r\n        meta: {\r\n        navLink: '/profile'\r\n        }\r\n    }\r\n\r\n]\r\n\r\nexport { ProfileRoutes }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst WithdrawRoutes = [\r\n    //authentication routes\r\n    // {\r\n    //     path: '/withdraw-funds',\r\n    //     component: lazy(() => import('../../views/withdraw/WithdrawalHistory'))\r\n    // },\r\n    {\r\n        path: '/withdraw-funds',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n\r\n        // component: lazy(() => import('../../views/withdraw/WithdrawalHistory'))\r\n    },\r\n    {\r\n        path: '/withdrawal-history',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n\r\n        // component: lazy(() => import('../../views/withdraw/WithdrawalHistory'))\r\n    }\r\n]\r\n\r\nexport { WithdrawRoutes}\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst IncomeReportRoutes = [\r\n    //authentication routes\r\n    {\r\n        path: '/income-reports',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n        // component: lazy(() => import('../../views/income-reports/income-report'))\r\n    }\r\n    // {\r\n    //     path: '/plans/active',\r\n    //     component: lazy(() => import('../../views/plans/ActivePlans'))\r\n    // }\r\n]\r\n\r\nexport { IncomeReportRoutes}\r\n","import { lazy } from 'react'\r\n\r\n// ** Merge Routes\r\nconst SidebarRoutes = [\r\n  //-------------------------\r\n  //App routes\r\n  {\r\n    path: '/home',\r\n    component: lazy(() => import('../../views/dashboard'))\r\n  },\r\n  // {\r\n  //   path: '/myprofile',\r\n  //   component: lazy(() => import('../../views/profile'))\r\n  // },\r\n  // {\r\n  //   path: 'myprofile/:id',\r\n  //   component: lazy(() => import('../../views/profile'))\r\n\r\n  // },\r\n  // {\r\n  //   path: '/myteam',\r\n  //   component: lazy(() => import('../../views/pages/Genealogy'))\r\n  // },\r\n  // {\r\n  //   path: '/add-funds',\r\n  //   component: lazy(() => import('../../views/DefaultPage'))\r\n  // },\r\n  // {\r\n  //   path: '/withdraw-funds',\r\n  //   component: lazy(() => import('../../views/DefaultPage'))\r\n  // },\r\n  {\r\n    path: '/update-password',\r\n    component: lazy(() => import('../../views/DefaultPage'))\r\n  },\r\n  {\r\n    path: '/logout',\r\n    component: lazy(() => import('../../views/pages/Logout')),\r\n    layout: 'BlankLayout'\r\n  }\r\n]\r\n\r\nexport { SidebarRoutes }\r\n","import { lazy } from 'react'\r\n\r\n\r\n// ** Merge Routes\r\nconst MyteamRoutes = [\r\n    //authentication routes\r\n    {\r\n        path: '/team/details',\r\n        component: lazy(() => import('../../views/DefaultPage'))\r\n\r\n        // component: lazy(() => import('../../views/team/Details'))\r\n    },\r\n    {\r\n        path: '/team/matrix',\r\n        component: lazy(() => import('../../views/team/Matrix'))\r\n    }\r\n]\r\n\r\nexport { MyteamRoutes }\r\n","import { lazy } from 'react'\r\n\r\n// ** Document title\r\nconst TemplateTitle = '%s - Cashmind'\r\n\r\n// ** Default Route\r\nconst DefaultRoute = '/home'\r\n\r\nimport { PlansRoutes } from \"./plans\"\r\nimport { ProfileRoutes } from \"./profile\"\r\nimport { WithdrawRoutes } from \"./withdraw\"\r\nimport { IncomeReportRoutes } from \"./income-reports\"\r\nimport { SidebarRoutes } from './sidebar'\r\nimport { MyteamRoutes } from './myteam'\r\n\r\n// ** Merge Routes\r\nconst Routes = [\r\n  //authentication routes\r\n  {\r\n    path: '/login',\r\n    component: lazy(() => import('../../views/pages/Login')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/signup',\r\n    component: lazy(() => import('../../views/signup')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/ref/:username',\r\n    component: lazy(() => import('../../views/signup')),\r\n    layout: 'BlankLayout',\r\n    meta: {\r\n      authRoute: true\r\n    }\r\n  },\r\n  {\r\n    path: '/error',\r\n    component: lazy(() => import('../../views/misc/Error')),\r\n    layout: 'BlankLayout'\r\n  },\r\n  ...SidebarRoutes,\r\n  ...PlansRoutes,\r\n  ...ProfileRoutes,\r\n  ...MyteamRoutes,\r\n  ...WithdrawRoutes,\r\n  ...IncomeReportRoutes\r\n]\r\n\r\nexport { DefaultRoute, TemplateTitle, Routes }\r\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Custom Hooks\nimport { useSkin } from '@hooks/useSkin'\n\nconst BlankLayout = ({ children, ...rest }) => {\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div className='blank-page'>\n      <div className='app-content content'>\n        <div className='content-wrapper'>\n          <div className='content-body'>{children}</div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BlankLayout\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { Settings, X } from 'react-feather'\nimport { CustomInput, FormGroup } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { selectThemeColors } from '@utils'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\n\nconst Customizer = props => {\n  // ** Props\n  const {\n    skin,\n    setSkin,\n    isRtl,\n    setIsRtl,\n    layout,\n    setLayout,\n    navbarType,\n    setNavbarType,\n    footerType,\n    setFooterType,\n    navbarColor,\n    setNavbarColor,\n    isHidden,\n    setIsHidden,\n    contentWidth,\n    setContentWidth,\n    menuCollapsed,\n    setMenuCollapsed,\n    transition,\n    setTransition\n  } = props\n\n  // ** State\n  const [openCustomizer, setOpenCustomizer] = useState(false)\n\n  // ** Toggles Customizer\n  const handleToggle = e => {\n    e.preventDefault()\n    setOpenCustomizer(!openCustomizer)\n  }\n\n  // ** Render Layout Skin Options\n  const renderSkinsRadio = () => {\n    const skinsArr = [\n      {\n        name: 'light',\n        label: 'Light',\n        checked: skin === 'light'\n      },\n      {\n        name: 'bordered',\n        label: 'Bordered',\n        checked: skin === 'bordered'\n      },\n      {\n        name: 'dark',\n        label: 'Dark',\n        checked: skin === 'dark'\n      },\n      {\n        name: 'semi-dark',\n        label: 'Semi Dark',\n        checked: skin === 'semi-dark'\n      }\n    ]\n\n    return skinsArr.map((radio, index) => {\n      const marginCondition = index !== skinsArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'semi-dark') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setSkin(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Navbar Colors Options\n  const renderNavbarColors = () => {\n    const colorsArr = ['white', 'primary', 'secondary', 'success', 'danger', 'info', 'warning', 'dark']\n\n    return colorsArr.map(color => (\n      <li\n        key={color}\n        className={classnames(`color-box bg-${color}`, {\n          selected: navbarColor === color,\n          border: color === 'white'\n        })}\n        onClick={() => setNavbarColor(color)}\n      ></li>\n    ))\n  }\n\n  // ** Render Navbar Type Options\n  const renderNavbarTypeRadio = () => {\n    const navbarTypeArr = [\n      {\n        name: 'floating',\n        label: 'Floating',\n        checked: navbarType === 'floating'\n      },\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: navbarType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: navbarType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: navbarType === 'hidden'\n      }\n    ]\n\n    return navbarTypeArr.map((radio, index) => {\n      const marginCondition = index !== navbarTypeArr.length - 1\n\n      if (layout === 'HorizontalLayout' && radio.name === 'hidden') {\n        return null\n      }\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={radio.name}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setNavbarType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // ** Render Footer Type Options\n  const renderFooterTypeRadio = () => {\n    const footerTypeArr = [\n      {\n        name: 'sticky',\n        label: 'Sticky',\n        checked: footerType === 'sticky'\n      },\n      {\n        name: 'static',\n        label: 'Static',\n        checked: footerType === 'static'\n      },\n      {\n        name: 'hidden',\n        label: 'Hidden',\n        checked: footerType === 'hidden'\n      }\n    ]\n\n    return footerTypeArr.map((radio, index) => {\n      const marginCondition = index !== footerTypeArr.length - 1\n\n      return (\n        <CustomInput\n          key={index}\n          type='radio'\n          id={`footer-${radio.name}`}\n          label={radio.label}\n          checked={radio.checked}\n          onChange={() => setFooterType(radio.name)}\n          className={classnames({ 'mr-1': marginCondition })}\n        />\n      )\n    })\n  }\n\n  // **  Router Transition Options\n  const transitionOptions = [\n    { value: 'fadeIn', label: 'Fade' },\n    { value: 'fadeInLeft', label: 'Fade In Left' },\n    { value: 'zoomIn', label: 'Zoom In' },\n    { value: 'none', label: 'None' }\n  ]\n\n  // ** Get Current Transition\n  const transitionValue = transitionOptions.find(i => i.value === transition)\n\n  return (\n    <div\n      className={classnames('customizer d-none d-md-block', {\n        open: openCustomizer\n      })}\n    >\n      <a href='/' className='customizer-toggle d-flex align-items-center justify-content-center' onClick={handleToggle}>\n        <Settings size={14} className='spinner' />\n      </a>\n      <PerfectScrollbar className='customizer-content'>\n        <div className='customizer-header px-2 pt-1 pb-0 position-relative'>\n          <h4 className='mb-0'>Theme Customizer</h4>\n          <p className='m-0'>Customize & Preview in Real Time</p>\n          <a href='/' className='customizer-close' onClick={handleToggle}>\n            <X />\n          </a>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Skin</p>\n            <div className='d-flex'>{renderSkinsRadio()}</div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Content Width</p>\n            <div className='d-flex'>\n              <CustomInput\n                type='radio'\n                id='full-width'\n                className='mr-1'\n                label='Full Width'\n                checked={contentWidth === 'full'}\n                onChange={() => setContentWidth('full')}\n              />\n              <CustomInput\n                type='radio'\n                id='boxes'\n                label='Boxed'\n                checked={contentWidth === 'boxed'}\n                onChange={() => setContentWidth('boxed')}\n              />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex'>\n              <p className='font-weight-bold mr-auto mb-0'>RTL</p>\n              <CustomInput type='switch' id='rtl' name='RTL' checked={isRtl} onChange={() => setIsRtl(!isRtl)} />\n            </div>\n          </FormGroup>\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex justify-content-between align-items-center'>\n              <p className='font-weight-bold mb-0'>Router Transition</p>\n              <Select\n                theme={selectThemeColors}\n                className='react-select'\n                classNamePrefix='select'\n                defaultValue={transitionOptions[0]}\n                value={transitionValue}\n                options={transitionOptions}\n                isClearable={false}\n                onChange={({ value }) => setTransition(value)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <p className='font-weight-bold'>Menu Layout</p>\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <CustomInput\n                type='radio'\n                id='vertical-layout'\n                label='Vertical'\n                checked={layout === 'VerticalLayout'}\n                onChange={() => setLayout('vertical')}\n                className='mr-1'\n              />\n              <CustomInput\n                type='radio'\n                id='horizontal-layout'\n                label='Horizontal'\n                checked={layout === 'HorizontalLayout'}\n                onChange={() => setLayout('horizontal')}\n              />\n            </div>\n          </FormGroup>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <div className='d-flex align-items-center'>\n                <p className='font-weight-bold mr-auto mb-0'>Menu Collapsed</p>\n                <CustomInput\n                  type='switch'\n                  id='menu-collapsed'\n                  name='menu-collapsed'\n                  checked={menuCollapsed}\n                  onChange={() => setMenuCollapsed(!menuCollapsed)}\n                />\n              </div>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <div className='d-flex align-items-center'>\n              <p className='font-weight-bold mr-auto mb-0'>Menu Hidden</p>\n              <CustomInput\n                type='switch'\n                id='menu-hidden'\n                name='menu-hidden'\n                checked={isHidden}\n                onChange={() => setIsHidden(!isHidden)}\n              />\n            </div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          {layout !== 'HorizontalLayout' ? (\n            <FormGroup className='mb-2'>\n              <p className='font-weight-bold'>Navbar Color</p>\n              <ul className='list-inline unstyled-list'>{renderNavbarColors()}</ul>\n            </FormGroup>\n          ) : null}\n\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>{layout === 'HorizontalLayout' ? 'Menu' : 'Navbar'} Type</p>\n            <div className='d-flex'>{renderNavbarTypeRadio()}</div>\n          </FormGroup>\n        </div>\n\n        <hr />\n\n        <div className='px-2'>\n          <FormGroup className='mb-2'>\n            <p className='font-weight-bold'>Footer Type</p>\n            <div className='d-flex'>{renderFooterTypeRadio()}</div>\n          </FormGroup>\n        </div>\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default Customizer\n","// ** Icons Import\nimport { Heart } from 'react-feather'\n\nconst Footer = () => {\n  return (\n    <p className='clearfix mb-0'>\n      <span className='float-md-left d-block d-md-inline-block mt-25'>\n        COPYRIGHT © {new Date().getFullYear()}{' '}\n        <a href='https://cashmind.in' target='_blank' rel='noopener noreferrer'>\n          Cashmind\n        </a>\n        <span className='d-none d-sm-inline-block'>, All rights Reserved</span>\n      </span>\n      {/* <span className='float-md-right d-none d-md-block'>\n        Hand-crafted & Made with\n        <Heart size={14} />\n      </span> */}\n    </p>\n  )\n}\n\nexport default Footer\n","// ** React Imports\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { isUserLoggedIn } from '@utils'\n\n// ** Store & Actions\nimport { useDispatch } from 'react-redux'\nimport { handleLogout } from '@store/actions/auth'\n\n// ** Third Party Components\nimport { UncontrolledDropdown, DropdownMenu, DropdownToggle, DropdownItem } from 'reactstrap'\nimport { User, Mail, CheckSquare, MessageSquare, Settings, CreditCard, HelpCircle, Power } from 'react-feather'\n\n// ** Default Avatar Image\nimport defaultAvatar from '@src/assets/images/portrait/small/avatar-s-11.jpg'\nimport { toNumber } from 'reactstrap/lib/utils'\n\nconst UserDropdown = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n\n  // ** State\n  const [userData, setUserData] = useState(null)\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (isUserLoggedIn() !== null) {\n      setUserData(JSON.parse(localStorage.getItem('userData')))\n    }\n  }, [])\n\n  //** Vars\n  const userAvatar = (userData && userData.avatar) || defaultAvatar\n\n  const renderUserImg = () => {\n    if (userData !== null && userData.avatar && userData.avatar.length > 10) {\n      return <img src={userData.avatar} alt='user-avatar' className='img-fluid rounded' height='40' width='40' />\n    } else {\n      const stateNum = (userData && userData.avatar),\n        states = ['light-success', 'light-danger', 'light-warning', 'light-info', 'light-primary', 'light-secondary'],\n        color = states[stateNum]\n      return (\n        <Avatar\n          initials\n          color={color}\n          className='rounded'\n          content={userData ? userData['fullname'] : 'A B'}\n          contentStyles={{\n            borderRadius: 0,\n            fontSize: 'calc(20px)',\n            width: '100%',\n            height: '100%'\n          }}\n          style={{\n            height: '40px',\n            width: '40px'\n          }}\n        />\n      )\n    }\n  }\n\n\n  return (\n    <UncontrolledDropdown tag='li' className='dropdown-user nav-item'>\n      <DropdownToggle href='/' tag='a' className='nav-link dropdown-user-link' onClick={e => e.preventDefault()}>\n        <div className='user-nav d-sm-flex d-none'>\n          <span className='user-name font-weight-bold'>{(userData && userData['fullname'])}</span>\n          <span className='user-status'>@{(userData && userData.username)}</span>\n        </div>\n        {renderUserImg()}\n        {/* <Avatar img={userAvatar} imgHeight='40' imgWidth='40' status='online' /> */}\n      </DropdownToggle>\n      <DropdownMenu right>\n        <DropdownItem tag={Link} to='/profile' >\n          <User size={14} className='mr-75' />\n          <span className='align-middle'>Profile</span>\n        </DropdownItem>\n        {/* <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <Mail size={14} className='mr-75' />\n          <span className='align-middle'>Inbox</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <CheckSquare size={14} className='mr-75' />\n          <span className='align-middle'>Tasks</span>\n        </DropdownItem>\n        <DropdownItem tag={Link} to='#' onClick={e => e.preventDefault()}>\n          <MessageSquare size={14} className='mr-75' />\n          <span className='align-middle'>Chats</span>\n        </DropdownItem> */}\n        <DropdownItem tag={Link} to='/login' onClick={() => dispatch(handleLogout())}>\n          <Power size={14} className='mr-75' />\n          <span className='align-middle'>Logout</span>\n        </DropdownItem>\n      </DropdownMenu>\n    </UncontrolledDropdown>\n  )\n}\n\nexport default UserDropdown\n","// ** Dropdowns Imports\nimport { Fragment } from 'react'\n\nimport UserDropdown from './UserDropdown'\n\n// ** Third Party Components\nimport { Sun, Moon, Menu } from 'react-feather'\nimport { NavItem, NavLink } from 'reactstrap'\n\nconst NavbarUser = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  // ** Function to toggle Theme (Light/Dark)\n  const ThemeToggler = () => {\n    if (skin === 'dark') {\n      return <Sun className='ficon' onClick={() => setSkin('light')} />\n    } else {\n      return <Moon className='ficon' onClick={() => setSkin('dark')} />\n    }\n  }\n\n  return (\n    <Fragment>\n      <ul className='navbar-nav d-xl-none d-flex align-items-center'>\n        <NavItem className='mobile-menu mr-auto'>\n          <NavLink className='nav-menu-main menu-toggle hidden-xs is-active' onClick={() => setMenuVisibility(true)}>\n            <Menu className='ficon' />\n          </NavLink>\n        </NavItem>\n      </ul>\n      <div className='bookmark-wrapper d-flex align-items-center'>\n        <NavItem className='d-block'>\n          <NavLink className='nav-link-style'>\n            <ThemeToggler />\n          </NavLink>\n        </NavItem>\n      </div>\n\n      <ul className='nav navbar-nav align-items-center ml-auto'>\n        <UserDropdown />\n      </ul>\n    </Fragment>\n  )\n}\nexport default NavbarUser\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Custom Components\nimport NavbarUser from './NavbarUser'\n\nconst ThemeNavbar = props => {\n  // ** Props\n  const { skin, setSkin, setMenuVisibility } = props\n\n  return (\n    <Fragment>\n      <NavbarUser skin={skin} setSkin={setSkin} setMenuVisibility={setMenuVisibility} />\n    </Fragment>\n  )\n}\n\nexport default ThemeNavbar\n","import { Mail, Home, Settings, LogOut, Edit3, Send, DownloadCloud, DollarSign, Users, Slack, User, Eye, Activity, PlayCircle, Layers, Monitor, Trello, DivideSquare, BookOpen } from 'react-feather'\r\nimport { Treemap } from 'recharts'\r\n\r\n\r\nexport default [\r\n  {\r\n    id: 'dashboard',\r\n    title: 'Dashboard',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'profile',\r\n    title: 'My Profile',\r\n    icon: <User size={20} />,\r\n    navLink: '/profile'\r\n  },\r\n  {\r\n    id: 'myteam',\r\n    title: 'My Team',\r\n    icon: <Users size={20} />,\r\n    children: [\r\n      {\r\n        id: 'my-team-list',\r\n        title: 'Team Details',\r\n        icon: <BookOpen size={20} />,\r\n        navLink: '/team/details'\r\n      },\r\n      {\r\n        id: 'my-team-matrix',\r\n        title: 'Team Matrix',\r\n        icon: <DivideSquare size={20} />,\r\n        navLink: '/team/matrix'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 'plans',\r\n    title: 'My Plans',\r\n    icon: <Layers size={20} />,\r\n    navLink: '/plans'\r\n\r\n    // children:[\r\n    //   {\r\n    //     id: 'all-plan',\r\n    //     title: 'Explore Plans',\r\n    //     icon: <Eye size={20} />,\r\n    //     navLink: '/plans'\r\n    //   },\r\n    //   {\r\n    //     id: 'active-plan',\r\n    //     title: 'Active Plan',\r\n    //     icon: <Activity size={20} />,\r\n    //     navLink: '/plans/active'\r\n    //   }\r\n    // ]\r\n\r\n  },\r\n  {\r\n    id: 'withdraw',\r\n    title: 'Withdraw',\r\n    icon: <DollarSign size={20} />,\r\n    children: [\r\n      {\r\n        id: 'withdrawFunds',\r\n        title: 'Withdraw Funds',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/withdraw-funds'\r\n      },\r\n      {\r\n        id: 'withdrawHistory',\r\n        title: 'Withdrawal History',\r\n        icon: <PlayCircle size={20} />,\r\n        navLink: '/withdrawal-history'\r\n      }\r\n    ]\r\n\r\n  },\r\n  {\r\n    id: 'income-reports',\r\n    title: 'Income Reports',\r\n    icon: <Trello size={20} />,\r\n    navLink: '/income-reports'\r\n  },\r\n  {\r\n    id: 'update-password',\r\n    title: 'Update Password',\r\n    icon: <Edit3 size={20} />,\r\n    navLink: '/update-password'\r\n  },\r\n  {\r\n    id: 'logout',\r\n    title: 'Logout',\r\n    icon: <LogOut size={20} />,\r\n    navLink: '/logout'\r\n  }\r\n\r\n]\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Disc, X, Circle } from 'react-feather'\n\n// ** Config\nimport themeConfig from '@configs/themeConfig'\n\nconst VerticalMenuHeader = props => {\n  // ** Props\n  const { menuCollapsed, setMenuCollapsed, setMenuVisibility, setGroupOpen, menuHover } = props\n\n  // ** Reset open group\n  useEffect(() => {\n    if (!menuHover && menuCollapsed) setGroupOpen([])\n  }, [menuHover, menuCollapsed])\n\n  // ** Menu toggler component\n  const Toggler = () => {\n    if (!menuCollapsed) {\n      return (\n        <Disc\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(true)}\n        />\n      )\n    } else {\n      return (\n        <Circle\n          size={20}\n          data-tour='toggle-icon'\n          className='text-primary toggle-icon d-none d-xl-block'\n          onClick={() => setMenuCollapsed(false)}\n        />\n      )\n    }\n  }\n\n  return (\n    <div className='navbar-header'>\n      <ul className='nav navbar-nav flex-row'>\n        <li className='nav-item mr-auto'>\n          <NavLink to='/' className='navbar-brand'>\n            <span className='brand-logo'>\n              <img src={themeConfig.app.appLogoImage} alt='logo' />\n            </span>\n            <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n          </NavLink>\n        </li>\n        <li className='nav-item nav-toggle'>\n          <div className='nav-link modern-nav-toggle cursor-pointer'>\n            <Toggler />\n            <X onClick={() => setMenuVisibility(false)} className='toggle-icon icon-x d-block d-xl-none' size={20} />\n          </div>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default VerticalMenuHeader\n","// ** React Imports\nimport { useContext } from 'react'\nimport { AbilityContext } from '@src/utility/context/Can'\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveVerticalNavMenuItemComponent = item => {\n  if (item.header) return 'VerticalNavMenuSectionHeader'\n  if (item.children) return 'VerticalNavMenuGroup'\n  return 'VerticalNavMenuLink'\n}\n\n/**\n * Return which component to render based on it's data/context\n * @param {Object} item nav menu item\n */\nexport const resolveHorizontalNavMenuItemComponent = item => {\n  if (item.children) return 'HorizontalNavMenuGroup'\n  return 'HorizontalNavMenuLink'\n}\n\n/**\n * Check if nav-link is active\n * @param {Object} link nav-link object\n */\n// export const isNavLinkActive = (link, currentURL, match) => {\n//   // return currentURL === link || (URLParams && Object.keys(URLParams).length && currentURLFilter === item.navLink)\n//   const getFirstObjProp = obj => obj[Object.keys(obj)[0]]\n//   return (\n//     currentURL === link ||\n//     (match !== null && match !== undefined && match.url === `${link}/${getFirstObjProp(match.params)}`)\n//   )\n// }\n\nexport const isNavLinkActive = (link, currentURL, routerProps) => {\n  return (\n    currentURL === link ||\n    (routerProps && routerProps.meta && routerProps.meta.navLink && routerProps.meta.navLink === link)\n  )\n  // return currentURL === link\n}\n\n/**\n * Check if nav group is\n * @param {Array} children Group children\n */\n// export const isNavGroupActive = (children, currentURL, match) => {\n//   return children.some(child => {\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children) {\n//       return isNavGroupActive(child.children, currentURL, match)\n//     }\n//     // else it's link => Check for matched Route\n//     return isNavLinkActive(child.navLink, currentURL, match)\n//   })\n// }\nexport const isNavGroupActive = (children, currentURL, routerProps) => {\n  return children.some(child => {\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children) {\n      return isNavGroupActive(child.children, currentURL, routerProps)\n    }\n    // else it's link => Check for matched Route\n    return isNavLinkActive(child.navLink, currentURL, routerProps)\n  })\n}\n\n/**\n * Search for parent object\n * @param {Array} navigation Group children\n * @param {string} currentURL current URL\n */\n// export const search = (navigation, currentURL, match) => {\n//   let result\n//   navigation.some(child => {\n//     let children\n//     // If child have children => It's group => Go deeper(recursive)\n//     if (child.children && (children = search(child.children, currentURL, match))) {\n//       return (result = {\n//         id: child.id,\n//         children\n//       })\n//     }\n\n//     // else it's link => Check for matched Route\n//     if (isNavLinkActive(child.navLink, currentURL, match)) {\n//       return (result = {\n//         id: child.id\n//       })\n//     }\n//   })\n//   return result\n// }\n\nexport const search = (navigation, currentURL, routerProps) => {\n  let result\n  navigation.some(child => {\n    let children\n    // If child have children => It's group => Go deeper(recursive)\n    if (child.children && (children = search(child.children, currentURL, routerProps))) {\n      return (result = {\n        id: child.id,\n        children\n      })\n    }\n\n    // else it's link => Check for matched Route\n    if (isNavLinkActive(child.navLink, currentURL, routerProps)) {\n      return (result = {\n        id: child.id\n      })\n    }\n  })\n  return result\n}\n\n/**\n * Loop through nested object\n * @param {object} obj nested object\n */\nexport const getAllParents = (obj, match) => {\n  const res = []\n  const recurse = (obj, current) => {\n    for (const key in obj) {\n      const value = obj[key]\n      if (value !== undefined) {\n        if (value && typeof value === 'object') {\n          recurse(value, key)\n        } else {\n          if (key === match) {\n            res.push(value)\n          }\n        }\n      }\n    }\n  }\n  recurse(obj)\n  return res\n}\n\nexport const canViewMenuGroup = item => {\n  const ability = useContext(AbilityContext)\n  // ! This same logic is used in canViewHorizontalNavMenuGroup and canViewHorizontalNavMenuHeaderGroup. So make sure to update logic in them as well\n  const hasAnyVisibleChild = item.children && item.children.some(i => ability.can(i.action, i.resource))\n\n  // ** If resource and action is defined in item => Return based on children visibility (Hide group if no child is visible)\n  // ** Else check for ability using provided resource and action along with checking if has any visible child\n  if (!(item.action && item.resource)) {\n    return hasAnyVisibleChild\n  }\n  return ability.can(item.action, item.resource) && hasAnyVisibleChild\n}\n\nexport const canViewMenuItem = item => {\n  const ability = useContext(AbilityContext)\n  return ability.can(item.action, item.resource)\n}\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation, matchPath, useParams } from 'react-router-dom'\n\n// ** Third Party Components\nimport { Badge } from 'reactstrap'\nimport classnames from 'classnames'\n\n// ** Vertical Menu Array Of Items\nimport navigation from '@src/navigation/vertical'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuLink = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  toggleActiveGroup,\n  parentItem,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  // ** To match path\n  const match = matchPath(currentURL, {\n    path: `${item.navLink}/:param`,\n    exact: true,\n    strict: false\n  })\n\n  // ** Search for current item parents\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    return allParents\n  }\n\n  // ** URL Vars\n  const resetActiveGroup = navLink => {\n    const parents = search(navigation, navLink, match)\n    toggleActiveGroup(item.id, parents)\n  }\n\n  // ** Reset Active & Open Group Arrays\n  const resetActiveAndOpenGroups = () => {\n    setGroupActive([])\n    setGroupOpen([])\n  }\n\n  // ** Checks url & updates active item\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames({\n        'nav-item': !item.children,\n        disabled: item.disabled,\n        active: item.navLink === activeItem\n      })}\n    >\n      <LinkTag\n        className='d-flex align-items-center'\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n        onClick={e => {\n          if (!item.navLink.length) {\n            e.preventDefault()\n          }\n          parentItem ? resetActiveGroup(item.navLink) : resetActiveAndOpenGroups()\n        }}\n      >\n        {item.icon}\n        <span className='menu-item text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Collapse, Badge } from 'reactstrap'\n\n// ** Vertical Menu Items Component\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\n// ** Utils\nimport { isNavGroupActive, getAllParents } from '@layouts/utils'\n\nconst VerticalNavMenuGroup = ({\n  item,\n  groupActive,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  groupOpen,\n  setGroupOpen,\n  parentItem,\n  menuCollapsed,\n  menuHover,\n  routerProps,\n  currentActiveItem\n}) => {\n  // ** Current Val\n  const currentURL = useLocation().pathname\n\n  // ** Toggles Open Group\n  const toggleOpenGroup = (item, parentItem) => {\n    let openArr = groupOpen\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      allParents.pop()\n    }\n\n    // ** If user clicked on menu group inside already opened group i.g. when user click on blog group inside pages group\n    if (groupOpen && allParents && groupOpen[0] === allParents[0]) {\n      groupOpen.includes(item) ? openArr.splice(openArr.indexOf(item), 1) : openArr.push(item)\n    } else {\n      openArr = []\n      if (!groupOpen.includes(item)) {\n        openArr.push(item)\n      }\n    }\n\n    // ** Set Open Group\n    setGroupOpen([...openArr])\n  }\n\n  // ** Toggle Active Group\n  const toggleActiveGroup = (item, parentItem) => {\n    let activeArr = groupActive\n    let allParents\n\n    if (parentItem) {\n      allParents = getAllParents(parentItem, 'id')\n      activeArr = allParents\n    } else {\n      activeArr.includes(item) ? activeArr.splice(activeArr.indexOf(item), 1) : activeArr.push(item)\n    }\n\n    // ** Set open group removing any activegroup item present in opengroup state\n    const openArr = groupOpen.filter(val => !activeArr.includes(val))\n    setGroupOpen([...openArr])\n\n    // **  Set Active Group\n    setGroupActive([...activeArr])\n  }\n\n  // ** On Group Item Click\n  const onCollapseClick = (e, item) => {\n    if ((groupActive && groupActive.includes(item.id)) || isNavGroupActive(item.children, currentURL, routerProps)) {\n      toggleActiveGroup(item.id)\n    } else {\n      toggleOpenGroup(item.id, parentItem)\n    }\n\n    e.preventDefault()\n  }\n\n  // ** Returns condition to add open class\n  const openClassCondition = id => {\n    if ((menuCollapsed && menuHover) || menuCollapsed === false) {\n      if (groupActive.includes(id) || groupOpen.includes(item.id)) {\n        return true\n      }\n    } else if (groupActive.includes(id) && menuCollapsed && menuHover === false) {\n      return false\n    } else {\n      return null\n    }\n  }\n\n  return (\n    <li\n      className={classnames('nav-item has-sub', {\n        open: openClassCondition(item.id),\n        'menu-collapsed-open': groupActive.includes(item.id),\n        'sidebar-group-active': groupActive.includes(item.id) || groupOpen.includes(item.id)\n      })}\n    >\n      <Link className='d-flex align-items-center' to='/' onClick={e => onCollapseClick(e, item)}>\n        {item.icon}\n        <span className='menu-title text-truncate'>{item.title}</span>\n\n        {item.badge && item.badgeText ? (\n          <Badge className='ml-auto mr-1' color={item.badge} pill>\n            {item.badgeText}\n          </Badge>\n        ) : null}\n      </Link>\n\n      {/* Render Child Recursively Through VerticalNavMenuItems Component */}\n      <ul className='menu-content'>\n        <Collapse isOpen={(groupActive && groupActive.includes(item.id)) || (groupOpen && groupOpen.includes(item.id))}>\n          <VerticalNavMenuItems\n            items={item.children}\n            groupActive={groupActive}\n            setGroupActive={setGroupActive}\n            groupOpen={groupOpen}\n            setGroupOpen={setGroupOpen}\n            toggleActiveGroup={toggleActiveGroup}\n            parentItem={item}\n            menuCollapsed={menuCollapsed}\n            menuHover={menuHover}\n            routerProps={routerProps}\n            currentActiveItem={currentActiveItem}\n            activeItem={activeItem}\n            setActiveItem={setActiveItem}\n          />\n        </Collapse>\n      </ul>\n    </li>\n  )\n}\n\nexport default VerticalNavMenuGroup\n","// ** Third Party Components\nimport { MoreHorizontal } from 'react-feather'\n\nconst VerticalNavMenuSectionHeader = ({ item, index }) => {\n  return (\n    <li className='navigation-header'>\n      <span>{item.header}</span>\n      <MoreHorizontal className='feather-more-horizontal' />\n    </li>\n  )\n}\n\nexport default VerticalNavMenuSectionHeader\n","// ** Vertical Menu Components\nimport VerticalNavMenuLink from './VerticalNavMenuLink'\nimport VerticalNavMenuGroup from './VerticalNavMenuGroup'\nimport VerticalNavMenuSectionHeader from './VerticalNavMenuSectionHeader'\n\n// ** Utils\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst VerticalMenuNavItems = props => {\n  // ** Components Object\n  const Components = {\n    VerticalNavMenuSectionHeader,\n    VerticalNavMenuGroup,\n    VerticalNavMenuLink\n  }\n\n  // ** Render Nav Menu Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName key={item.id || item.header} item={item} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default VerticalMenuNavItems\n","// ** React Imports\nimport { Fragment, useState, useRef } from 'react'\n\n// ** Vertical Menu Items Array\nimport navigation from '@src/navigation/vertical'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n// ** Vertical Menu Components\nimport VerticalMenuHeader from './VerticalMenuHeader'\nimport VerticalNavMenuItems from './VerticalNavMenuItems'\n\nconst Sidebar = props => {\n  // ** Props\n  const { menuCollapsed, routerProps, menu, currentActiveItem, skin } = props\n\n  // ** States\n  const [groupOpen, setGroupOpen] = useState([])\n  const [groupActive, setGroupActive] = useState([])\n  const [activeItem, setActiveItem] = useState(null)\n\n  // ** Menu Hover State\n  const [menuHover, setMenuHover] = useState(false)\n\n  // ** Ref\n  const shadowRef = useRef(null)\n\n  // ** Function to handle Mouse Enter\n  const onMouseEnter = () => {\n    if (menuCollapsed) {\n      setMenuHover(true)\n    }\n  }\n\n  // ** Scroll Menu\n  const scrollMenu = container => {\n    if (shadowRef && container.scrollTop > 0) {\n      if (!shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.add('d-block')\n      }\n    } else {\n      if (shadowRef.current.classList.contains('d-block')) {\n        shadowRef.current.classList.remove('d-block')\n      }\n    }\n  }\n\n  return (\n    <Fragment>\n      <div\n        className={classnames('main-menu menu-fixed menu-accordion menu-shadow', {\n          expanded: menuHover || menuCollapsed === false,\n          'menu-light': skin !== 'semi-dark' && skin !== 'dark',\n          'menu-dark': skin === 'semi-dark' || skin === 'dark'\n        })}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={() => setMenuHover(false)}\n      >\n        {menu ? (\n          menu(props)\n        ) : (\n          <Fragment>\n            {/* Vertical Menu Header */}\n            <VerticalMenuHeader setGroupOpen={setGroupOpen} menuHover={menuHover} {...props} />\n            {/* Vertical Menu Header Shadow */}\n            <div className='shadow-bottom' ref={shadowRef}></div>\n            {/* Perfect Scrollbar */}\n            <PerfectScrollbar\n              className='main-menu-content'\n              options={{ wheelPropagation: false }}\n              onScrollY={container => scrollMenu(container)}\n            >\n              <ul className='navigation navigation-main'>\n                <VerticalNavMenuItems\n                  items={navigation}\n                  groupActive={groupActive}\n                  setGroupActive={setGroupActive}\n                  activeItem={activeItem}\n                  setActiveItem={setActiveItem}\n                  groupOpen={groupOpen}\n                  setGroupOpen={setGroupOpen}\n                  routerProps={routerProps}\n                  menuCollapsed={menuCollapsed}\n                  menuHover={menuHover}\n                  currentActiveItem={currentActiveItem}\n                />\n              </ul>\n            </PerfectScrollbar>\n          </Fragment>\n        )}\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Sidebar\n","//** React Imports\r\nimport { useEffect } from 'react'\r\n\r\n// ** Store & Actions\r\nimport { handleRTL } from '@store/actions/layout'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nexport const useRTL = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const isRtl = useSelector(state => state.layout.isRTL)\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(isRtl) : value\r\n      dispatch(handleRTL(valueToStore))\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // ** Get HTML Tag\r\n    const element = document.getElementsByTagName('html')[0]\r\n\r\n    // ** If isRTL then add attr dir='rtl' with HTML else attr dir='ltr'\r\n    if (isRtl) {\r\n      element.setAttribute('dir', 'rtl')\r\n    } else {\r\n      element.setAttribute('dir', 'ltr')\r\n    }\r\n  }, [isRtl])\r\n\r\n  return [isRtl, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarType = () => {\r\n  // ** State\r\n  const [navbarType, setNavbarType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarType) : value\r\n\r\n      // ** Set state\r\n      setNavbarType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarType, setValue]\r\n}\r\n","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useFooterType = () => {\r\n  // ** State\r\n  const [footerType, setFooterType] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.footer.type\r\n    } catch (error) {\r\n      // ** If error also initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.footer.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(footerType) : value\r\n\r\n      // ** Set state\r\n      setFooterType(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [footerType, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useNavbarColor = () => {\r\n  // ** State\r\n  const [navbarColor, setNavbarColor] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.navbar.backgroundColor\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(navbarColor) : value\r\n\r\n      // ** Set state\r\n      setNavbarColor(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [navbarColor, setValue]\r\n}\r\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuCollapsed, handleContentWidth, handleMenuHidden } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport FooterComponent from './components/footer'\nimport NavbarComponent from './components/navbar'\nimport SidebarComponent from './components/menu/vertical-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/vertical-menu.scss'\nimport '@styles/base/core/menu/menu-types/vertical-overlay-menu.scss'\n\nconst VerticalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, routerProps, currentActiveItem } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [menuVisibility, setMenuVisibility] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Update Window Width\n  const handleWindowWidth = () => {\n    setWindowWidth(window.innerWidth)\n  }\n\n  // ** Vars\n  const location = useLocation()\n  const contentWidth = layoutStore.contentWidth\n  const menuCollapsed = layoutStore.menuCollapsed\n  const isHidden = layoutStore.menuHidden\n\n  // ** Toggles Menu Collapsed\n  const setMenuCollapsed = val => dispatch(handleMenuCollapsed(val))\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  //** This function will detect the Route Change and will hide the menu on menu item click\n  useEffect(() => {\n    if (menuVisibility && windowWidth < 1200) {\n      setMenuVisibility(false)\n    }\n  }, [location])\n\n  //** Sets Window Size & Layout Props\n  useEffect(() => {\n    if (window !== undefined) {\n      window.addEventListener('resize', handleWindowWidth)\n    }\n  }, [windowWidth])\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    return () => setIsMounted(false)\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static',\n    hidden: 'navbar-hidden'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top',\n    static: 'navbar-static-top',\n    hidden: 'd-none'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n  return (\n    <div\n      className={classnames(\n        `wrapper vertical-layout ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        }`,\n        {\n          // Modern Menu\n          'vertical-menu-modern': windowWidth >= 1200,\n          'menu-collapsed': menuCollapsed && windowWidth >= 1200,\n          'menu-expanded': !menuCollapsed && windowWidth > 1200,\n\n          // Overlay Menu\n          'vertical-overlay-menu': windowWidth < 1200,\n          'menu-hide': !menuVisibility && windowWidth < 1200,\n          'menu-open': menuVisibility && windowWidth < 1200\n        }\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      {!isHidden ? (\n        <SidebarComponent\n          skin={skin}\n          menu={menu}\n          menuCollapsed={menuCollapsed}\n          menuVisibility={menuVisibility}\n          setMenuCollapsed={setMenuCollapsed}\n          setMenuVisibility={setMenuVisibility}\n          routerProps={routerProps}\n          currentActiveItem={currentActiveItem}\n        />\n      ) : null}\n\n      <Navbar\n        expand='lg'\n        light={skin !== 'dark'}\n        dark={skin === 'dark' || bgColorCondition}\n        color={bgColorCondition ? navbarColor : undefined}\n        className={classnames(\n          `header-navbar navbar align-items-center ${navbarClasses[navbarType] || 'floating-nav'} navbar-shadow`\n        )}\n      >\n        <div className='navbar-container d-flex content'>\n          {navbar ? (\n            navbar({ setMenuVisibility, skin, setSkin })\n          ) : (\n            <NavbarComponent setMenuVisibility={setMenuVisibility} skin={skin} setSkin={setSkin} />\n          )}\n        </div>\n      </Navbar>\n      {children}\n\n      {/* Vertical Nav Menu Overlay */}\n      <div\n        className={classnames('sidenav-overlay', {\n          show: menuVisibility\n        })}\n        onClick={() => setMenuVisibility(false)}\n      ></div>\n      {/* Vertical Nav Menu Overlay */}\n\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          menuCollapsed={menuCollapsed}\n          setMenuCollapsed={setMenuCollapsed}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default VerticalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/VerticalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst VerticalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default VerticalLayout\n","import { Mail, Home } from 'react-feather'\r\n\r\nexport default [\r\n  {\r\n    id: 'home',\r\n    title: 'Home',\r\n    icon: <Home size={20} />,\r\n    navLink: '/home'\r\n  },\r\n  {\r\n    id: 'secondPage',\r\n    title: 'Second Page',\r\n    icon: <Mail size={20} />,\r\n    navLink: '/second-page'\r\n  }\r\n]\r\n","// ** React Imports\nimport { useEffect } from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\n\n// ** Horizontal menu items array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Utils\nimport { isNavLinkActive, search, getAllParents } from '@layouts/utils'\n\nconst HorizontalNavMenuLink = ({\n  item,\n  setOpenDropdown,\n  setGroupActive,\n  activeItem,\n  setActiveItem,\n  routerProps,\n  currentActiveItem,\n  isChild\n}) => {\n  // ** Conditional Link Tag, if item has newTab or externalLink props use <a> tag else use NavLink\n  const LinkTag = item.externalLink ? 'a' : NavLink\n\n  // ** URL Vars\n  const location = useLocation()\n  const currentURL = location.pathname\n\n  const navLinkActive = isNavLinkActive(item.navLink, currentURL, routerProps)\n\n  // ** Get parents of current items\n  const searchParents = (navigation, currentURL) => {\n    const parents = search(navigation, currentURL, routerProps) // Search for parent object\n    const allParents = getAllParents(parents, 'id') // Parents Object to Parents Array\n    allParents.pop()\n    return allParents\n  }\n\n  // ** Remove all items from OpenDropdown array\n  const resetOpenDropdowns = () => setOpenDropdown([])\n\n  // ** On mount update active group array\n  useEffect(() => {\n    if (currentActiveItem !== null) {\n      setActiveItem(currentActiveItem)\n      const arr = searchParents(navigation, currentURL)\n      setGroupActive([...arr])\n    }\n  }, [location])\n\n  return (\n    <li\n      className={classnames('nav-item', {\n        active: item.navLink === activeItem,\n        disabled: item.disabled\n      })}\n      onClick={resetOpenDropdowns}\n    >\n      <LinkTag\n        className={classnames('d-flex align-items-center', {\n          'dropdown-item': isChild,\n          'nav-link': !isChild\n        })}\n        tag={LinkTag}\n        target={item.newTab ? '_blank' : undefined}\n        /*eslint-disable */\n        {...(item.externalLink === true\n          ? {\n              href: item.navLink || '/'\n            }\n          : {\n              to: item.navLink || '/',\n              isActive: (match, location) => {\n                if (!match) {\n                  return false\n                }\n\n                if (match.url && match.url !== '' && match.url === item.navLink) {\n                  currentActiveItem = item.navLink\n                }\n              }\n            })}\n        /*eslint-enable */\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </LinkTag>\n    </li>\n  )\n}\n\nexport default HorizontalNavMenuLink\n","// ** React Imports\nimport { Link, useLocation } from 'react-router-dom'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Dropdown, DropdownMenu, DropdownToggle } from 'reactstrap'\n\n// ** Utils\nimport { isNavGroupActive } from '@layouts/utils'\n\n// ** Horizontal Menu Items Component\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalNavMenuGroup = props => {\n  // ** Props\n  const {\n    item,\n    submenu,\n    groupActive,\n    onMouseEnter,\n    onMouseLeave,\n    openDropdown,\n    setGroupActive,\n    activeItem,\n    setActiveItem,\n    routerProps,\n    setOpenDropdown,\n    currentActiveItem\n  } = props\n\n  // ** URL Var\n  const currentURL = useLocation().pathname\n\n  // ** Dropdown menu modifiers\n  const menuModifiers = {\n    setMaxHeight: {\n      enabled: true,\n      fn: data => {\n        const pageHeight = window.innerHeight,\n          ddTop = data.instance.reference.getBoundingClientRect().top,\n          ddHeight = data.popper.height\n        let maxHeight, stylesObj\n\n        // ** Calculate and set height\n        if (pageHeight - ddTop - ddHeight - 28 < 1) {\n          maxHeight = pageHeight - ddTop - 25\n          stylesObj = {\n            maxHeight,\n            overflowY: 'auto'\n          }\n        }\n\n        const ddRef = data.instance.popper.getBoundingClientRect()\n\n        // ** If there is not space left to open sub menu open it to the right\n        if (ddRef.left + ddRef.width - (window.innerWidth - 16) >= 0) {\n          data.instance.popper.closest('.dropdown').classList.add('openLeft')\n        }\n\n        return {\n          ...data,\n          styles: {\n            ...stylesObj\n          }\n        }\n      }\n    }\n  }\n  return (\n    <Dropdown\n      tag='li'\n      className={classnames({\n        'nav-item': submenu === false,\n        'dropdown-submenu': submenu === true,\n        'sidebar-group-active active':\n          isNavGroupActive(item.children, currentURL, routerProps) || groupActive.includes(item.id)\n      })}\n      isOpen={openDropdown.includes(item.id)}\n      toggle={() => onMouseEnter(item.id)}\n      onMouseEnter={() => onMouseEnter(item.id)}\n      onMouseLeave={() => onMouseLeave(item.id)}\n    >\n      <DropdownToggle\n        to='/'\n        tag={Link}\n        className={classnames('dropdown-toggle d-flex align-items-center', {\n          'dropdown-item': submenu === true,\n          'nav-link': submenu === false\n        })}\n        onClick={e => e.preventDefault()}\n      >\n        {item.icon}\n        <span>{item.title}</span>\n      </DropdownToggle>\n      <DropdownMenu tag='ul' modifiers={menuModifiers}>\n        <HorizontalNavMenuItems\n          submenu={true}\n          parentItem={item}\n          items={item.children}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          openDropdown={openDropdown}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          isChild={true}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </DropdownMenu>\n    </Dropdown>\n  )\n}\n\nexport default HorizontalNavMenuGroup\n","// ** Menu Components Imports\nimport HorizontalNavMenuLink from './HorizontalNavMenuLink'\nimport HorizontalNavMenuGroup from './HorizontalNavMenuGroup'\nimport { resolveHorizontalNavMenuItemComponent as resolveNavItemComponent } from '@layouts/utils'\n\nconst HorizontalNavMenuItems = props => {\n  // ** Components Object\n  const Components = {\n    HorizontalNavMenuGroup,\n    HorizontalNavMenuLink\n  }\n\n  // ** Render Nav Items\n  const RenderNavItems = props.items.map((item, index) => {\n    const TagName = Components[resolveNavItemComponent(item)]\n\n    return <TagName item={item} index={index} key={item.id} {...props} />\n  })\n\n  return RenderNavItems\n}\n\nexport default HorizontalNavMenuItems\n","// ** React Imports\nimport { useState } from 'react'\n\n// ** Horizontal Menu Array\nimport navigation from '@src/navigation/horizontal'\n\n// ** Horizontal Menu Components\nimport HorizontalNavMenuItems from './HorizontalNavMenuItems'\n\nconst HorizontalMenu = ({ currentActiveItem, routerProps }) => {\n  // ** States\n  const [activeItem, setActiveItem] = useState(null)\n  const [groupActive, setGroupActive] = useState([])\n  const [openDropdown, setOpenDropdown] = useState([])\n\n  // ** On mouse enter push the ID to openDropdown array\n  const onMouseEnter = id => {\n    const arr = openDropdown\n    arr.push(id)\n    setOpenDropdown([...arr])\n  }\n\n  // ** On mouse leave remove the ID to openDropdown array\n  const onMouseLeave = id => {\n    const arr = openDropdown\n    arr.splice(arr.indexOf(id), 1)\n    setOpenDropdown([...arr])\n  }\n\n  return (\n    <div className='navbar-container main-menu-content'>\n      <ul className='nav navbar-nav' id='main-menu-navigation'>\n        <HorizontalNavMenuItems\n          submenu={false}\n          items={navigation}\n          activeItem={activeItem}\n          groupActive={groupActive}\n          routerProps={routerProps}\n          onMouseEnter={onMouseEnter}\n          onMouseLeave={onMouseLeave}\n          openDropdown={openDropdown}\n          setActiveItem={setActiveItem}\n          setGroupActive={setGroupActive}\n          setOpenDropdown={setOpenDropdown}\n          currentActiveItem={currentActiveItem}\n        />\n      </ul>\n    </div>\n  )\n}\n\nexport default HorizontalMenu\n","// ** React Imports\nimport { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\n// ** Store & Actions\nimport { useSelector, useDispatch } from 'react-redux'\nimport { handleMenuHidden, handleContentWidth } from '@store/actions/layout'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { ArrowUp } from 'react-feather'\nimport ScrollToTop from 'react-scroll-up'\nimport { Navbar, NavItem, Button } from 'reactstrap'\n\n// ** Configs\nimport themeConfig from '@configs/themeConfig'\n\n// ** Custom Components\nimport Customizer from '@components/customizer'\nimport NavbarComponent from './components/navbar'\nimport FooterComponent from './components/footer'\nimport MenuComponent from './components/menu/horizontal-menu'\n\n// ** Custom Hooks\nimport { useRTL } from '@hooks/useRTL'\nimport { useSkin } from '@hooks/useSkin'\nimport { useNavbarType } from '@hooks/useNavbarType'\nimport { useFooterType } from '@hooks/useFooterType'\nimport { useNavbarColor } from '@hooks/useNavbarColor'\n\n// ** Styles\nimport '@styles/base/core/menu/menu-types/horizontal-menu.scss'\n\nconst HorizontalLayout = props => {\n  // ** Props\n  const { children, navbar, footer, menu, currentActiveItem, routerProps } = props\n\n  // ** Hooks\n  const [skin, setSkin] = useSkin()\n  const [isRtl, setIsRtl] = useRTL()\n  const [navbarType, setNavbarType] = useNavbarType()\n  const [footerType, setFooterType] = useFooterType()\n  const [navbarColor, setNavbarColor] = useNavbarColor()\n\n  // ** States\n  const [isMounted, setIsMounted] = useState(false)\n  const [navbarScrolled, setNavbarScrolled] = useState(false)\n\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const layoutStore = useSelector(state => state.layout)\n\n  // ** Vars\n  const contentWidth = layoutStore.contentWidth\n  const isHidden = layoutStore.menuHidden\n\n  // ** Handles Content Width\n  const setContentWidth = val => dispatch(handleContentWidth(val))\n\n  // ** Handles Content Width\n  const setIsHidden = val => dispatch(handleMenuHidden(val))\n\n  // ** UseEffect Cleanup\n  const cleanup = () => {\n    setIsMounted(false)\n    setNavbarScrolled(false)\n  }\n\n  //** ComponentDidMount\n  useEffect(() => {\n    setIsMounted(true)\n    window.addEventListener('scroll', function () {\n      if (window.pageYOffset > 65 && navbarScrolled === false) {\n        setNavbarScrolled(true)\n      }\n      if (window.pageYOffset < 65) {\n        setNavbarScrolled(false)\n      }\n    })\n    return () => cleanup()\n  }, [])\n\n  // ** Vars\n  const footerClasses = {\n    static: 'footer-static',\n    sticky: 'footer-fixed',\n    hidden: 'footer-hidden'\n  }\n\n  const navbarWrapperClasses = {\n    floating: 'navbar-floating',\n    sticky: 'navbar-sticky',\n    static: 'navbar-static'\n  }\n\n  const navbarClasses = {\n    floating: 'floating-nav',\n    sticky: 'fixed-top'\n  }\n\n  const bgColorCondition = navbarColor !== '' && navbarColor !== 'light' && navbarColor !== 'white'\n\n  if (!isMounted) {\n    return null\n  }\n\n  return (\n    <div\n      className={classnames(\n        `wrapper horizontal-layout horizontal-menu ${navbarWrapperClasses[navbarType] || 'navbar-floating'} ${\n          footerClasses[footerType] || 'footer-static'\n        } menu-expanded`\n      )}\n      {...(isHidden ? { 'data-col': '1-column' } : {})}\n    >\n      <Navbar\n        expand='lg'\n        className={classnames('header-navbar navbar-fixed align-items-center navbar-shadow navbar-brand-center', {\n          'navbar-scrolled': navbarScrolled\n        })}\n      >\n        {!navbar && (\n          <div className='navbar-header d-xl-block d-none'>\n            <ul className='nav navbar-nav'>\n              <NavItem>\n                <Link to='/' className='navbar-brand'>\n                  <span className='brand-logo'>\n                    <img src={themeConfig.app.appLogoImage} alt='logo' />\n                  </span>\n                  <h2 className='brand-text mb-0'>{themeConfig.app.appName}</h2>\n                </Link>\n              </NavItem>\n            </ul>\n          </div>\n        )}\n\n        <div className='navbar-container d-flex content'>\n          {navbar ? navbar({ skin, setSkin }) : <NavbarComponent skin={skin} setSkin={setSkin} />}\n        </div>\n      </Navbar>\n      {!isHidden ? (\n        <div className='horizontal-menu-wrapper'>\n          <Navbar\n            tag='div'\n            expand='sm'\n            light={skin !== 'dark'}\n            dark={skin === 'dark' || bgColorCondition}\n            className={classnames(`header-navbar navbar-horizontal navbar-shadow menu-border`, {\n              [navbarClasses[navbarType]]: navbarType !== 'static',\n              'floating-nav': (!navbarClasses[navbarType] && navbarType !== 'static') || navbarType === 'floating'\n            })}\n          >\n            {menu ? (\n              menu({ routerProps, currentActiveItem })\n            ) : (\n              <MenuComponent routerProps={routerProps} currentActiveItem={currentActiveItem} />\n            )}\n          </Navbar>\n        </div>\n      ) : null}\n\n      {children}\n      {themeConfig.layout.customizer === true ? (\n        <Customizer\n          skin={skin}\n          setSkin={setSkin}\n          footerType={footerType}\n          setFooterType={setFooterType}\n          navbarType={navbarType}\n          setNavbarType={setNavbarType}\n          navbarColor={navbarColor}\n          setNavbarColor={setNavbarColor}\n          isRtl={isRtl}\n          setIsRtl={setIsRtl}\n          layout={props.layout}\n          setLayout={props.setLayout}\n          isHidden={isHidden}\n          setIsHidden={setIsHidden}\n          contentWidth={contentWidth}\n          setContentWidth={setContentWidth}\n          transition={props.transition}\n          setTransition={props.setTransition}\n          themeConfig={themeConfig}\n        />\n      ) : null}\n      <footer\n        className={classnames(`footer footer-light ${footerClasses[footerType] || 'footer-static'}`, {\n          'd-none': footerType === 'hidden'\n        })}\n      >\n        {footer ? (\n          footer({ footerType, footerClasses })\n        ) : (\n          <FooterComponent footerType={footerType} footerClasses={footerClasses} />\n        )}\n      </footer>\n\n      {themeConfig.layout.scrollTop === true ? (\n        <div className='scroll-to-top'>\n          <ScrollToTop showUnder={300} style={{ bottom: '5%' }}>\n            <Button className='btn-icon' color='primary'>\n              <ArrowUp size={14} />\n            </Button>\n          </ScrollToTop>\n        </div>\n      ) : null}\n    </div>\n  )\n}\nexport default HorizontalLayout\n","// !Do not remove the Layout import\nimport Layout from '@layouts/HorizontalLayout'\n\n// ** Components\n// import CustomMenu from './components/Menu'\n// import CustomNavbar from './components/Navbar'\n// import CustomFooter from './components/Footer'\n\nconst HorizontalLayout = props => (\n  <Layout\n    // menu={props => <CustomMenu {...props} />}\n    // navbar={props => <CustomNavbar {...props} />}\n    // footer={props => <CustomFooter {...props} />}\n    {...props}\n  >\n    {props.children}\n  </Layout>\n)\n\nexport default HorizontalLayout\n","// ** React Imports\r\nimport { Suspense, useContext, lazy } from 'react'\r\n\r\n// ** Utils\r\nimport { isUserLoggedIn } from '@utils'\r\nimport { useLayout } from '@hooks/useLayout'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { useRouterTransition } from '@hooks/useRouterTransition'\r\n\r\n// ** Custom Components\r\n// import Spinner from '@components/spinner/Loading-spinner' // Uncomment if your require content fallback\r\nimport LayoutWrapper from '@layouts/components/layout-wrapper'\r\n\r\n// ** Router Components\r\nimport { BrowserRouter as AppRouter, Route, Switch, Redirect } from 'react-router-dom'\r\n\r\n// ** Routes & Default Routes\r\nimport { DefaultRoute, Routes } from './routes'\r\n\r\n// ** Layouts\r\nimport BlankLayout from '@layouts/BlankLayout'\r\nimport VerticalLayout from '@src/layouts/VerticalLayout'\r\nimport HorizontalLayout from '@src/layouts/HorizontalLayout'\r\n\r\nconst Router = () => {\r\n  // ** Hooks\r\n  const [layout, setLayout] = useLayout()\r\n  const [transition, setTransition] = useRouterTransition()\r\n\r\n  // ** ACL Ability Context\r\n  const ability = useContext(AbilityContext)\r\n\r\n  // ** Default Layout\r\n  const DefaultLayout = layout === 'horizontal' ? 'HorizontalLayout' : 'VerticalLayout'\r\n\r\n  // ** All of the available layouts\r\n  const Layouts = { BlankLayout, VerticalLayout, HorizontalLayout }\r\n\r\n  // ** Current Active Item\r\n  const currentActiveItem = null\r\n\r\n  // ** Return Filtered Array of Routes & Paths\r\n  const LayoutRoutesAndPaths = layout => {\r\n    const LayoutRoutes = []\r\n    const LayoutPaths = []\r\n\r\n    if (Routes) {\r\n      Routes.filter(route => {\r\n        // ** Checks if Route layout or Default layout matches current layout\r\n        if (route.layout === layout || (route.layout === undefined && DefaultLayout === layout)) {\r\n          LayoutRoutes.push(route)\r\n          LayoutPaths.push(route.path)\r\n        }\r\n      })\r\n    }\r\n\r\n    return { LayoutRoutes, LayoutPaths }\r\n  }\r\n\r\n  const NotAuthorized = lazy(() => import('@src/views/misc/NotAuthorized'))\r\n\r\n  // ** Init Error Component\r\n  const Error = lazy(() => import('@src/views/misc/Error'))\r\n\r\n  /**\r\n   ** Final Route Component Checks for Login & User Role and then redirects to the route\r\n   */\r\n  const FinalRoute = props => {\r\n    const route = props.route\r\n    let action, resource\r\n\r\n    // ** Assign vars based on route meta\r\n    if (route.meta) {\r\n      action = route.meta.action ? route.meta.action : null\r\n      resource = route.meta.resource ? route.meta.resource : null\r\n    }\r\n\r\n    if (\r\n      (!isUserLoggedIn() && route.meta === undefined) ||\r\n      (!isUserLoggedIn() && route.meta && !route.meta.authRoute && !route.meta.publicRoute)\r\n    ) {\r\n      /**\r\n       ** If user is not Logged in & route meta is undefined\r\n       ** OR\r\n       ** If user is not Logged in & route.meta.authRoute, !route.meta.publicRoute are undefined\r\n       ** Then redirect user to login\r\n       */\r\n\r\n      return <Redirect to='/login' />\r\n    } else if (route.meta && route.meta.authRoute && isUserLoggedIn()) {\r\n      // ** If route has meta and authRole and user is Logged in then redirect user to home page (DefaultRoute)\r\n      return <Redirect to='/home' />\r\n    } else {\r\n      // ** If none of the above render component\r\n      return <route.component {...props} />\r\n    }\r\n    // else if (isUserLoggedIn() && !ability.can(action || 'read', resource)) {\r\n    //   // ** If user is Logged in and doesn't have ability to visit the page redirect the user to Not Authorized\r\n    //   return <Redirect to='/misc/not-authorized' />\r\n    // }\r\n  }\r\n\r\n  // ** Return Route to Render\r\n  const ResolveRoutes = () => {\r\n    return Object.keys(Layouts).map((layout, index) => {\r\n      // ** Convert Layout parameter to Layout Component\r\n      // ? Note: make sure to keep layout and component name equal\r\n\r\n      const LayoutTag = Layouts[layout]\r\n\r\n      // ** Get Routes and Paths of the Layout\r\n      const { LayoutRoutes, LayoutPaths } = LayoutRoutesAndPaths(layout)\r\n\r\n      // ** We have freedom to display different layout for different route\r\n      // ** We have made LayoutTag dynamic based on layout, we can also replace it with the only layout component,\r\n      // ** that we want to implement like VerticalLayout or HorizontalLayout\r\n      // ** We segregated all the routes based on the layouts and Resolved all those routes inside layouts\r\n\r\n      // ** RouterProps to pass them to Layouts\r\n      const routerProps = {}\r\n\r\n      return (\r\n        <Route path={LayoutPaths} key={index}>\r\n          <LayoutTag\r\n            routerProps={routerProps}\r\n            layout={layout}\r\n            setLayout={setLayout}\r\n            transition={transition}\r\n            setTransition={setTransition}\r\n            currentActiveItem={currentActiveItem}\r\n          >\r\n            <Switch>\r\n              {LayoutRoutes.map(route => {\r\n                return (\r\n                  <Route\r\n                    key={route.path}\r\n                    path={route.path}\r\n                    exact={route.exact === true}\r\n                    render={props => {\r\n                      // ** Assign props to routerProps\r\n                      Object.assign(routerProps, {\r\n                        ...props,\r\n                        meta: route.meta\r\n                      })\r\n\r\n                      return (\r\n                        <Suspense fallback={null}>\r\n                          {/* Layout Wrapper to add classes based on route's layout, appLayout and className */}\r\n                          <LayoutWrapper\r\n                            layout={DefaultLayout}\r\n                            transition={transition}\r\n                            setTransition={setTransition}\r\n                            /* Conditional props */\r\n                            /*eslint-disable */\r\n                            {...(route.appLayout\r\n                              ? {\r\n                                appLayout: route.appLayout\r\n                              }\r\n                              : {})}\r\n                            {...(route.meta\r\n                              ? {\r\n                                routeMeta: route.meta\r\n                              }\r\n                              : {})}\r\n                            {...(route.className\r\n                              ? {\r\n                                wrapperClass: route.className\r\n                              }\r\n                              : {})}\r\n                          /*eslint-enable */\r\n                          >\r\n                            {/* <route.component {...props} /> */}\r\n                            <FinalRoute route={route} {...props} />\r\n                          </LayoutWrapper>\r\n                        </Suspense>\r\n                      )\r\n                    }}\r\n                  />\r\n                )\r\n              })}\r\n            </Switch>\r\n          </LayoutTag>\r\n        </Route>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <AppRouter basename={process.env.REACT_APP_BASENAME}>\r\n      <Switch>\r\n        {/* If user is logged in Redirect user to DefaultRoute else to login */}\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return isUserLoggedIn() ? <Redirect to={DefaultRoute} /> : <Redirect to='/login' />\r\n          }}\r\n        />\r\n        {/* <Route\r\n          exact\r\n          path='/'\r\n          render={() => {\r\n            return <Redirect to={DefaultRoute} />\r\n          }}\r\n        /> */}\r\n        {/* Not Auth Route */}\r\n        <Route\r\n          exact\r\n          path='/not-authorized'\r\n          render={props => (\r\n            <Layouts.BlankLayout>\r\n              <NotAuthorized />\r\n            </Layouts.BlankLayout>\r\n          )}\r\n        />\r\n        {ResolveRoutes()}\r\n        {/* NotFound Error page */}\r\n        <Route path='*' component={Error} />\r\n      </Switch>\r\n    </AppRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n","//** React Imports\r\nimport { useState, useEffect } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useLayout = () => {\r\n  // ** States\r\n  const [lastLayout, setLastLayout] = useState(null)\r\n  const [layout, setLayout] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.type\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.type\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(layout) : value\r\n\r\n      // ** Set state\r\n      setLayout(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const handleLayout = () => {\r\n    // ** If layout is horizontal & screen size is equals to or below 1200\r\n    if (layout === 'horizontal' && window.innerWidth <= 1200) {\r\n      setLayout('vertical')\r\n      setLastLayout('horizontal')\r\n    }\r\n    // ** If lastLayout is horizontal & screen size is equals to or above 1200\r\n    if (lastLayout === 'horizontal' && window.innerWidth >= 1200) {\r\n      setLayout('horizontal')\r\n    }\r\n  }\r\n\r\n  // ** ComponentDidMount\r\n  useEffect(() => {\r\n    handleLayout()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    // ** Window Resize Event\r\n    window.addEventListener('resize', handleLayout)\r\n  }, [layout, lastLayout])\r\n\r\n  return [layout, setValue]\r\n}\r\n","//** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Configs\r\nimport themeConfig from '@configs/themeConfig'\r\n\r\nexport const useRouterTransition = () => {\r\n  // ** State\r\n  const [transition, setTransition] = useState(() => {\r\n    try {\r\n      return themeConfig.layout.routerTransition\r\n    } catch (error) {\r\n      // ** If error return initialValue\r\n      console.log(error)\r\n      return themeConfig.layout.routerTransition\r\n    }\r\n  })\r\n\r\n  // ** Return a wrapped version of useState's setter function\r\n  const setValue = value => {\r\n    try {\r\n      // ** Allow value to be a function so we have same API as useState\r\n      const valueToStore = value instanceof Function ? value(transition) : value\r\n\r\n      // ** Set state\r\n      setTransition(valueToStore)\r\n    } catch (error) {\r\n      // ** A more advanced implementation would handle the error case\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return [transition, setValue]\r\n}\r\n","// ** Router Import\r\nimport Router from './router/Router'\r\n\r\nconst App = props => <Router />\r\n\r\nexport default App\r\n"],"sourceRoot":""}