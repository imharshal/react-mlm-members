{"version":3,"sources":["views/pages/ResetPassword.js","../node_modules/react-feather/dist/icons/arrow-right.js"],"names":["PasswordResetSchema","yup","shape","password","min","required","confirmPassword","oneOf","Login","props","useForm","mode","resolver","yupResolver","handleSubmit","register","control","errors","setValue","getValues","formState","trigger","useSkin","skin","useContext","AbilityContext","useDispatch","useHistory","useState","ValidLink","setValidLink","Loading","setLoading","illustration","source","require","default","verifyLink","URL","window","location","href","pathname","toString","split","useEffect","axios","get","api","routes","verify_password_link","then","response","data","success","Swal","fire","title","text","icon","result","catch","error","className","to","onClick","e","preventDefault","viewBox","version","height","x1","y1","x2","y2","id","stopColor","offset","stopOpacity","stroke","strokeWidth","fill","fillRule","transform","d","style","opacity","points","lg","sm","src","alt","md","tag","color","onSubmit","Data","token","isObjEmpty","post","change_password","message","for","name","render","field","type","placeholder","classnames","Ripple","block","disabled","size","_extends","Object","assign","target","i","arguments","length","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ArrowRight","forwardRef","_ref","ref","_ref$color","_ref$size","rest","React","createElement","xmlns","width","strokeLinecap","strokeLinejoin","propTypes","PropTypes","string","oneOfType","number","displayName"],"mappings":"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","file":"static/js/38.bb49ca4c.chunk.js","sourcesContent":["import { useState, useContext, useEffect, Fragment } from 'react'\r\nimport classnames from 'classnames'\r\nimport Avatar from '@components/avatar'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useForm, Controller, set } from 'react-hook-form'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { handleLogin } from '@store/actions/auth'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\r\nimport { Facebook, Twitter, Mail, GitHub, HelpCircle, Coffee, AlertCircle, ArrowRight } from 'react-feather'\r\nimport * as yup from 'yup'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\n// import Spinner from '../../@core/components/spinner/Fallback-spinner'\r\n// import { useParams } from 'react-router-dom'\r\n\r\nimport {\r\n  Alert,\r\n  Row,\r\n  Col,\r\n  CardTitle,\r\n  CardText,\r\n  Form,\r\n  Input,\r\n  FormGroup,\r\n  Label,\r\n  CustomInput,\r\n  Button,\r\n  UncontrolledTooltip,\r\n  FormFeedback,\r\n  Spinner\r\n} from 'reactstrap'\r\n\r\nimport Swal from 'sweetalert2'\r\n\r\nimport '@styles/base/pages/page-auth.scss'\r\nimport axios from 'axios'\r\nimport api from '../../configs/apiConfig'\r\n\r\n\r\nconst ToastContent = ({ name, role }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n        <h6 className='toast-title font-weight-bold'>Welcome, {name.split(' ')[0]}</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>You have successfully logged in.</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst ErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<AlertCircle size={12} />} />\r\n        <h6 className='toast-title font-weight-bold'>Login failed</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>Invalid username or password</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst NetworkErrorToast = () => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='danger' icon={<AlertCircle size={12} />} />\r\n        <h6 className='toast-title font-weight-bold'>Network issue</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>Please check your network connection</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst PasswordResetSchema = yup.object().shape({\r\n  password: yup.string()\r\n    .min(6, \"Minimum 6 characters required\")\r\n    .required('Password is required'),\r\n  confirmPassword: yup.string()\r\n    .min(6, \"Minimum 6 characters required\")\r\n    .required('Enter password again')\r\n    .oneOf([yup.ref('password'), null], \"Password does't match\")\r\n})\r\n\r\nconst Login = props => {\r\n\r\n  const { register, handleSubmit, control, setValue, getValues, formState: { errors }, trigger } = useForm({\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(PasswordResetSchema)\r\n  })\r\n\r\n  const [skin, setSkin] = useSkin()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [ValidLink, setValidLink] = useState(false)\r\n\r\n  const [Loading, setLoading] = useState(false)\r\n\r\n  // const { register, errors, handleSubmit } = useForm()\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  // useEffect(() => {\r\n\r\n  //   console.log(username)\r\n  //   console.log(password)\r\n  // }, [])\r\n\r\n  const verifyLink = () => {\r\n    const pathname = new URL(window.location.href).pathname\r\n    const token = pathname.toString().split(\"/\")[2]\r\n    return token\r\n  }\r\n  useEffect(() => {\r\n    axios.get(`${api.routes.get.verify_password_link}/${verifyLink()}`)\r\n      .then(response => {\r\n        // console.log(response)\r\n        if (response.data.success) {\r\n          setValidLink(true)\r\n\r\n          // throw new Error(response.data.message)\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Invalid Link!',\r\n            text: 'Redirecting to homepage',\r\n            icon: 'warning'\r\n          }).then((result) => {\r\n            window.location = \"/login\"\r\n          })\r\n        }\r\n      })\r\n      .catch(error => {\r\n        setValidLink(false)\r\n        Swal.fire({\r\n          title: 'Invalid Link!',\r\n          text: 'Redirecting to homepage',\r\n          icon: 'warning'\r\n        }).then((result) => {\r\n          window.location = \"/login\"\r\n        })\r\n      })\r\n\r\n  }, [])\r\n\r\n  const onSubmit = data => {\r\n    const Data = {\r\n      ...data,\r\n      token: verifyLink()\r\n    }\r\n    trigger()\r\n    setLoading(true)\r\n    if (isObjEmpty(errors)) {\r\n      axios.post(api.routes.post.change_password, Data)\r\n        .then(response => {\r\n          // console.log(response)\r\n          if (response.data.success) {\r\n            Swal.fire({\r\n              title: 'Password changed successfully!',\r\n              text: 'Redirecting to login page',\r\n              icon: 'success'\r\n            }).then((result) => {\r\n              window.location = \"/login\"\r\n            })\r\n            // throw new Error(response.data.message)\r\n          } else {\r\n            Swal.fire({\r\n              title: 'Operation failed!',\r\n              text: response.data.message,\r\n              icon: 'danger'\r\n            }).then((result) => {\r\n              window.location = \"/login\"\r\n            })\r\n          }\r\n        })\r\n        .catch(error => {\r\n          setValidLink(false)\r\n          Swal.fire({\r\n            title: 'Invalid Link!',\r\n            text: 'Redirecting to homepage',\r\n            icon: 'warning'\r\n          }).then((result) => {\r\n            window.location = \"/login\"\r\n          })\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {ValidLink && <div className='auth-wrapper auth-v2'>\r\n        <Row className='auth-inner m-0'>\r\n          <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n            <svg viewBox='0 0 139 95' version='1.1' height='28'>\r\n              <defs>\r\n                <linearGradient x1='100%' y1='10.5120544%' x2='50%' y2='89.4879456%' id='linearGradient-1'>\r\n                  <stop stopColor='#000000' offset='0%'></stop>\r\n                  <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                </linearGradient>\r\n                <linearGradient x1='64.0437835%' y1='46.3276743%' x2='37.373316%' y2='100%' id='linearGradient-2'>\r\n                  <stop stopColor='#EEEEEE' stopOpacity='0' offset='0%'></stop>\r\n                  <stop stopColor='#FFFFFF' offset='100%'></stop>\r\n                </linearGradient>\r\n              </defs>\r\n              <g id='Page-1' stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n                <g id='Artboard' transform='translate(-400.000000, -178.000000)'>\r\n                  <g id='Group' transform='translate(400.000000, 178.000000)'>\r\n                    <path\r\n                      d='M-5.68434189e-14,2.84217094e-14 L39.1816085,2.84217094e-14 L69.3453773,32.2519224 L101.428699,2.84217094e-14 L138.784583,2.84217094e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L6.71554594,44.4188507 C2.46876683,39.9813776 0.345377275,35.1089553 0.345377275,29.8015838 C0.345377275,24.4942122 0.230251516,14.560351 -5.68434189e-14,2.84217094e-14 Z'\r\n                      id='Path'\r\n                      className='text-primary'\r\n                      style={{ fill: 'currentColor' }}\r\n                    ></path>\r\n                    <path\r\n                      d='M69.3453773,32.2519224 L101.428699,1.42108547e-14 L138.784583,1.42108547e-14 L138.784199,29.8015838 C137.958931,37.3510206 135.784352,42.5567762 132.260463,45.4188507 C128.736573,48.2809251 112.33867,64.5239941 83.0667527,94.1480575 L56.2750821,94.1480575 L32.8435758,70.5039241 L69.3453773,32.2519224 Z'\r\n                      id='Path'\r\n                      fill='url(#linearGradient-1)'\r\n                      opacity='0.2'\r\n                    ></path>\r\n                    <polygon\r\n                      id='Path-2'\r\n                      fill='#000000'\r\n                      opacity='0.049999997'\r\n                      points='69.3922914 32.4202615 32.8435758 70.5039241 54.0490008 16.1851325'\r\n                    ></polygon>\r\n                    <polygon\r\n                      id='Path-2'\r\n                      fill='#000000'\r\n                      opacity='0.099999994'\r\n                      points='69.3922914 32.4202615 32.8435758 70.5039241 58.3683556 20.7402338'\r\n                    ></polygon>\r\n                    <polygon\r\n                      id='Path-3'\r\n                      fill='url(#linearGradient-2)'\r\n                      opacity='0.099999994'\r\n                      points='101.428699 0 83.0667527 94.1480575 130.378721 47.0740288'\r\n                    ></polygon>\r\n                  </g>\r\n                </g>\r\n              </g>\r\n            </svg>\r\n            <h2 className='brand-text text-primary ml-1'>Cashmind</h2>\r\n          </Link>\r\n          <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n            <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n              <img className='img-fluid' src={source} alt='Login V2' />\r\n            </div>\r\n          </Col>\r\n          <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n            <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n\r\n              <CardTitle tag='h2' className='font-weight-bold mb-1 mt-5'>\r\n                Reset Password\r\n              </CardTitle>\r\n              <Alert color=\"primary\">\r\n                <CardText className='mb-2 alert-body'>Kindly choose strong password to secure your account</CardText>\r\n              </Alert>\r\n\r\n              <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n                <FormGroup>\r\n                  <Label className='form-label' for={`password-forgot`}>\r\n                    New Password\r\n                  </Label>\r\n                  <Controller\r\n                    name=\"password\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <Input\r\n                        {...field}\r\n                        type='password'\r\n                        id={`password-forgot`}\r\n                        placeholder='Enter New Password'\r\n                        className={classnames({ 'is-invalid': errors['password'] })}\r\n                      />\r\n                    )}\r\n                  />\r\n                  {errors.password && <FormFeedback>{errors.password.message}</FormFeedback>}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label className='form-label' for={`confirmPassword-forgot`}>\r\n                    Confirm New Password\r\n                  </Label>\r\n                  <Controller\r\n                    name=\"confirmPassword\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <Input\r\n                        {...field}\r\n                        type='password'\r\n                        id={`confirmPassword-forgot`}\r\n                        placeholder='Confirm Password'\r\n                        className={classnames({ 'is-invalid': errors['confirmPassword'] })}\r\n                      />\r\n                    )}\r\n                  />\r\n                  {errors.confirmPassword && <FormFeedback>{errors.confirmPassword.message}</FormFeedback>}\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Button.Ripple className=\"mt-2\" block type='submit' color='primary' disabled={Loading}>\r\n                    {Loading ? <>\r\n                      <Spinner color='white' size='sm' type='grow' />\r\n                      <span className='ml-50'>Processing...</span>\r\n                    </> : 'Change Password'}\r\n                    <ArrowRight\r\n                      size={14}\r\n                      className=\"align-middle ml-sm-25 ml-0\"\r\n                    ></ArrowRight>\r\n                  </Button.Ripple>\r\n                </FormGroup>\r\n              </Form>\r\n              <p className='text-center mt-2'>\r\n                <span className='mr-25'>New on our platform?</span>\r\n                <Link to='/signup'>\r\n                  <span>Create an account</span>\r\n                </Link>\r\n              </p>\r\n\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar ArrowRight = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"12 5 19 12 12 19\"\n  }));\n});\nArrowRight.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nArrowRight.displayName = 'ArrowRight';\nexport default ArrowRight;"],"sourceRoot":""}